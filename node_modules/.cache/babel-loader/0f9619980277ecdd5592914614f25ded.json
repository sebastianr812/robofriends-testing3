{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function () {\n  function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  return get;\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _arrayPrototype = require('array.prototype.flat');\n\nvar _arrayPrototype2 = _interopRequireDefault(_arrayPrototype);\n\nvar _has = require('has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _enzymeShallowEqual = require('enzyme-shallow-equal');\n\nvar _enzymeShallowEqual2 = _interopRequireDefault(_enzymeShallowEqual);\n\nvar _Utils = require('./Utils');\n\nvar _getAdapter = require('./getAdapter');\n\nvar _getAdapter2 = _interopRequireDefault(_getAdapter);\n\nvar _Debug = require('./Debug');\n\nvar _RSTTraversal = require('./RSTTraversal');\n\nvar _selectors = require('./selectors');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar NODE = (0, _Utils.sym)('__node__');\nvar NODES = (0, _Utils.sym)('__nodes__');\nvar RENDERER = (0, _Utils.sym)('__renderer__');\nvar UNRENDERED = (0, _Utils.sym)('__unrendered__');\nvar ROOT = (0, _Utils.sym)('__root__');\nvar OPTIONS = (0, _Utils.sym)('__options__');\nvar SET_STATE = (0, _Utils.sym)('__setState__');\nvar ROOT_NODES = (0, _Utils.sym)('__rootNodes__');\nvar CHILD_CONTEXT = (0, _Utils.sym)('__childContext__');\nvar WRAPPING_COMPONENT = (0, _Utils.sym)('__wrappingComponent__');\nvar PRIMARY_WRAPPER = (0, _Utils.sym)('__primaryWrapper__');\nvar ROOT_FINDER = (0, _Utils.sym)('__rootFinder__');\nvar PROVIDER_VALUES = (0, _Utils.sym)('__providerValues__');\n/**\n * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n * function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @param {Function} filter\n * @returns {ShallowWrapper}\n */\n\nfunction findWhereUnwrapped(wrapper, predicate) {\n  var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _RSTTraversal.treeFilter;\n  return wrapper.flatMap(function (n) {\n    return filter(n.getNodeInternal(), predicate);\n  });\n}\n/**\n * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n * the provided predicate function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @returns {ShallowWrapper}\n */\n\n\nfunction filterWhereUnwrapped(wrapper, predicate) {\n  return wrapper.wrap(wrapper.getNodesInternal().filter(predicate).filter(Boolean));\n}\n/**\n * Ensure options passed to ShallowWrapper are valid. Throws otherwise.\n * @param {Object} options\n */\n\n\nfunction validateOptions(options) {\n  var lifecycleExperimental = options.lifecycleExperimental,\n      disableLifecycleMethods = options.disableLifecycleMethods,\n      enableComponentDidUpdateOnSetState = options.enableComponentDidUpdateOnSetState,\n      supportPrevContextArgumentOfComponentDidUpdate = options.supportPrevContextArgumentOfComponentDidUpdate,\n      lifecycles = options.lifecycles;\n\n  if (typeof lifecycleExperimental !== 'undefined' && typeof lifecycleExperimental !== 'boolean') {\n    throw new Error('lifecycleExperimental must be either true or false if provided');\n  }\n\n  if (typeof disableLifecycleMethods !== 'undefined' && typeof disableLifecycleMethods !== 'boolean') {\n    throw new Error('disableLifecycleMethods must be either true or false if provided');\n  }\n\n  if (lifecycleExperimental != null && disableLifecycleMethods != null && lifecycleExperimental === disableLifecycleMethods) {\n    throw new Error('lifecycleExperimental and disableLifecycleMethods cannot be set to the same value');\n  }\n\n  if (typeof enableComponentDidUpdateOnSetState !== 'undefined' && lifecycles.componentDidUpdate && lifecycles.componentDidUpdate.onSetState !== enableComponentDidUpdateOnSetState) {\n    throw new TypeError('the legacy enableComponentDidUpdateOnSetState option should be matched by `lifecycles: { componentDidUpdate: { onSetState: true } }`, for compatibility');\n  }\n\n  if (typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined' && lifecycles.componentDidUpdate && lifecycles.componentDidUpdate.prevContext !== supportPrevContextArgumentOfComponentDidUpdate) {\n    throw new TypeError('the legacy supportPrevContextArgumentOfComponentDidUpdate option should be matched by `lifecycles: { componentDidUpdate: { prevContext: true } }`, for compatibility');\n  }\n}\n\nfunction getAdapterLifecycles(_ref) {\n  var options = _ref.options;\n  var _options$lifecycles = options.lifecycles,\n      lifecycles = _options$lifecycles === undefined ? {} : _options$lifecycles,\n      enableComponentDidUpdateOnSetState = options.enableComponentDidUpdateOnSetState,\n      supportPrevContextArgumentOfComponentDidUpdate = options.supportPrevContextArgumentOfComponentDidUpdate;\n  var hasLegacySetStateArg = typeof enableComponentDidUpdateOnSetState !== 'undefined';\n  var hasLegacyPrevContextArg = typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined';\n  var componentDidUpdate = hasLegacySetStateArg || hasLegacyPrevContextArg ? (0, _object2['default'])({}, hasLegacySetStateArg && {\n    onSetState: !!enableComponentDidUpdateOnSetState\n  }, hasLegacyPrevContextArg && {\n    prevContext: !!supportPrevContextArgumentOfComponentDidUpdate\n  }) : null;\n  var originalGDSFP = lifecycles.getDerivedStateFromProps;\n  var getDerivedStateFromProps = originalGDSFP ? {\n    hasShouldComponentUpdateBug: !!originalGDSFP.hasShouldComponentUpdateBug\n  } : false;\n  return (0, _object2['default'])({}, lifecycles, {\n    setState: (0, _object2['default'])({}, lifecycles.setState),\n    getChildContext: (0, _object2['default'])({\n      calledByRenderer: true\n    }, lifecycles.getChildContext)\n  }, componentDidUpdate && {\n    componentDidUpdate: componentDidUpdate\n  }, {\n    getDerivedStateFromProps: getDerivedStateFromProps\n  });\n}\n\nfunction getRootNode(node) {\n  if (node.nodeType === 'host') {\n    return node;\n  }\n\n  return node.rendered;\n}\n\nfunction getRootNodeInternal(wrapper) {\n  if (wrapper[ROOT].length !== 1) {\n    throw new Error('getRootNodeInternal(wrapper) can only be called when wrapper wraps one node');\n  }\n\n  if (wrapper[ROOT] !== wrapper) {\n    return wrapper[ROOT_NODES][0];\n  }\n\n  return wrapper[ROOT][NODE];\n}\n\nfunction nodeParents(wrapper, node) {\n  return (0, _RSTTraversal.parentsOfNode)(node, getRootNodeInternal(wrapper));\n}\n\nfunction privateSetNodes(wrapper, nodes) {\n  if (!Array.isArray(nodes)) {\n    (0, _Utils.privateSet)(wrapper, NODE, nodes);\n    (0, _Utils.privateSet)(wrapper, NODES, [nodes]);\n  } else {\n    (0, _Utils.privateSet)(wrapper, NODE, nodes[0]);\n    (0, _Utils.privateSet)(wrapper, NODES, nodes);\n  }\n\n  (0, _Utils.privateSet)(wrapper, 'length', wrapper[NODES].length);\n}\n\nfunction pureComponentShouldComponentUpdate(prevProps, props, prevState, state) {\n  return !(0, _enzymeShallowEqual2['default'])(prevProps, props) || !(0, _enzymeShallowEqual2['default'])(prevState, state);\n}\n\nfunction isPureComponent(instance) {\n  return instance && instance.isPureReactComponent;\n}\n\nfunction getChildContext(node, hierarchy, renderer) {\n  var instance = node.instance,\n      Component = node.type;\n  var componentName = (0, _Utils.displayNameOfNode)(node); // Warn like react if childContextTypes is not defined:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L639-L646\n\n  if (_typeof(Component.childContextTypes) !== 'object') {\n    // eslint-disable-next-line no-console\n    console.warn(String(componentName) + '.getChildContext(): childContextTypes must be defined in order to use getChildContext().');\n    return {};\n  } // Check childContextTypes like react:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L630-L637\n\n\n  var childContext = instance.getChildContext();\n  Object.keys(childContext).forEach(function (key) {\n    if (!(key in Component.childContextTypes)) {\n      throw new Error(String(componentName) + '.getChildContext(): key \"' + String(key) + '\" is not defined in childContextTypes.');\n    }\n  });\n\n  if (typeof renderer.checkPropTypes === 'function') {\n    renderer.checkPropTypes(Component.childContextTypes, childContext, 'child context', hierarchy);\n  }\n\n  return childContext;\n}\n\nfunction spyOnGetChildContextInitialRender(nodes, adapter) {\n  if (!(0, _Utils.isCustomComponentElement)(nodes, adapter) || !nodes.type.prototype || typeof nodes.type.prototype.getChildContext !== 'function') {\n    return null;\n  }\n\n  return (0, _Utils.spyMethod)(nodes.type.prototype, 'getChildContext');\n}\n\nfunction privateSetChildContext(adapter, wrapper, instance, renderedNode, getChildContextSpy) {\n  var renderer = wrapper[RENDERER]; // We only support parent-based context.\n\n  if (adapter.options.legacyContextMode !== 'parent') {\n    return;\n  }\n\n  if (getChildContextSpy) {\n    (0, _Utils.privateSet)(wrapper, CHILD_CONTEXT, getChildContextSpy.getLastReturnValue());\n    getChildContextSpy.restore();\n  } else if (typeof instance.getChildContext === 'function') {\n    // If there's no spy but getChildContext is a function, that means our renderer\n    // is not going to call it for us, so we need to call it ourselves.\n    var nodeHierarchy = [wrapper[NODE]].concat(nodeParents(wrapper, wrapper[NODE]));\n    var childContext = getChildContext(renderedNode, nodeHierarchy, renderer);\n    (0, _Utils.privateSet)(wrapper, CHILD_CONTEXT, childContext);\n  } else {\n    (0, _Utils.privateSet)(wrapper, CHILD_CONTEXT, null);\n  }\n}\n\nfunction mockSCUIfgDSFPReturnNonNull(node, state) {\n  var getDerivedStateFromProps = node.type.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    // we try to fix a React shallow renderer bug here.\n    // (facebook/react#14607, which has been fixed in react 16.8):\n    // when gDSFP return derived state, it will set instance state in shallow renderer before SCU,\n    // this will cause `this.state` in sCU be the updated state, which is wrong behavior.\n    // so we have to wrap sCU to pass the old state to original sCU.\n    var instance = node.instance;\n\n    var _spyMethod = (0, _Utils.spyMethod)(instance, 'shouldComponentUpdate', function (originalSCU) {\n      return function () {\n        function shouldComponentUpdate() {\n          instance.state = state;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var sCUResult = originalSCU.apply(instance, args);\n          var nextState = args[1];\n          instance.state = nextState;\n          restore();\n          return sCUResult;\n        }\n\n        return shouldComponentUpdate;\n      }();\n    }),\n        restore = _spyMethod.restore;\n  }\n}\n/**\n * Recursively dive()s every custom component in a wrapper until\n * the target component is found.\n *\n * @param {ShallowWrapper} wrapper A ShallowWrapper to search\n * @param {ComponentType} target A react custom component that, when found, will end recursion\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {ShallowWrapper|undefined} A ShallowWrapper for the target, or\n *  undefined if it can't be found\n */\n\n\nfunction deepRender(wrapper, target, adapter) {\n  var node = wrapper[NODE];\n  var element = node && adapter.nodeToElement(node);\n\n  if (wrapper.type() === target) {\n    return wrapper.dive();\n  }\n\n  if (element && (0, _Utils.isCustomComponentElement)(element, adapter)) {\n    return deepRender(wrapper.dive(), target, adapter);\n  }\n\n  var children = wrapper.children();\n\n  for (var i = 0; i < children.length; i += 1) {\n    var found = deepRender(children.at(i), target, adapter);\n\n    if (typeof found !== 'undefined') {\n      return found;\n    }\n  }\n\n  return undefined;\n}\n/**\n * Deep-renders the `wrappingComponent` and returns the context that should\n * be accessible to the primary wrapper.\n *\n * @param {WrappingComponentWrapper} wrapper The `WrappingComponentWrapper` for a\n *  `wrappingComponent`\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {object} An object containing an object of legacy context values and a Map of\n *  `createContext()` Provider values.\n */\n\n\nfunction getContextFromWrappingComponent(wrapper, adapter) {\n  var rootFinder = deepRender(wrapper, wrapper[ROOT_FINDER], adapter);\n\n  if (!rootFinder) {\n    throw new Error('`wrappingComponent` must render its children!');\n  }\n\n  return {\n    legacyContext: rootFinder[OPTIONS].context,\n    providerValues: rootFinder[PROVIDER_VALUES]\n  };\n}\n/**\n * Makes options specifically for `ShallowWrapper`. Most of the logic here is around rendering\n * a `wrappingComponent` (if one was provided) and adding the child context of that component\n * to `options.context`.\n *\n * @param {ReactElement} nodes the nodes passed to `ShallowWrapper`\n * @param {ShallowWrapper} root this `ShallowWrapper`'s parent. If this is passed, options are\n *  not transformed.\n * @param {*} passedOptions the options passed to `ShallowWrapper`.\n * @param {*} wrapper the `ShallowWrapper` itself\n * @returns {Object} the decorated and transformed options\n */\n\n\nfunction makeShallowOptions(nodes, root, passedOptions, wrapper) {\n  var options = (0, _Utils.makeOptions)(passedOptions);\n  var adapter = (0, _getAdapter2['default'])(passedOptions);\n  (0, _Utils.privateSet)(options, PROVIDER_VALUES, passedOptions[PROVIDER_VALUES]);\n\n  if (root || !(0, _Utils.isCustomComponent)(options.wrappingComponent, adapter)) {\n    return options;\n  }\n\n  if (typeof adapter.wrapWithWrappingComponent !== 'function') {\n    throw new TypeError('your adapter does not support `wrappingComponent`. Try upgrading it!');\n  }\n\n  var _adapter$wrapWithWrap = adapter.wrapWithWrappingComponent(nodes, options),\n      wrappedNode = _adapter$wrapWithWrap.node,\n      RootFinder = _adapter$wrapWithWrap.RootFinder; // eslint-disable-next-line no-use-before-define\n\n\n  var wrappingComponent = new WrappingComponentWrapper(wrappedNode, wrapper, RootFinder);\n\n  var _getContextFromWrappi = getContextFromWrappingComponent(wrappingComponent, adapter),\n      wrappingComponentLegacyContext = _getContextFromWrappi.legacyContext,\n      wrappingComponentProviderValues = _getContextFromWrappi.providerValues;\n\n  (0, _Utils.privateSet)(wrapper, WRAPPING_COMPONENT, wrappingComponent);\n  return (0, _object2['default'])({}, options, _defineProperty({\n    context: (0, _object2['default'])({}, options.context, wrappingComponentLegacyContext)\n  }, PROVIDER_VALUES, wrappingComponentProviderValues));\n}\n\nfunction makeInheritedChildOptions(wrapper) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var childOptions = (0, _object2['default'])({}, wrapper[OPTIONS], options, {\n    context: options.context || (0, _object2['default'])({}, wrapper[OPTIONS].context, wrapper[ROOT][CHILD_CONTEXT])\n  });\n  (0, _Utils.privateSet)(childOptions, PROVIDER_VALUES, wrapper[ROOT][PROVIDER_VALUES]);\n  return childOptions;\n}\n/**\n * @class ShallowWrapper\n */\n\n\nvar ShallowWrapper = function () {\n  function ShallowWrapper(nodes, root) {\n    var _this = this;\n\n    var passedOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, ShallowWrapper);\n\n    validateOptions(passedOptions);\n    var options = makeShallowOptions(nodes, root, passedOptions, this);\n    var adapter = (0, _getAdapter2['default'])(options);\n    var lifecycles = getAdapterLifecycles(adapter); // mounting a ShallowRender component\n\n    if (!root) {\n      if (!adapter.isValidElement(nodes)) {\n        throw new TypeError('ShallowWrapper can only wrap valid elements');\n      }\n\n      var getChildContextSpy = lifecycles.getChildContext.calledByRenderer ? spyOnGetChildContextInitialRender(nodes, adapter) : null;\n      (0, _Utils.privateSet)(this, ROOT, this);\n      (0, _Utils.privateSet)(this, UNRENDERED, nodes);\n      var renderer = adapter.createRenderer((0, _object2['default'])({\n        mode: 'shallow'\n      }, options));\n      (0, _Utils.privateSet)(this, RENDERER, renderer);\n      var providerValues = new Map(options[PROVIDER_VALUES] || []);\n      this[RENDERER].render(nodes, options.context, {\n        providerValues: providerValues\n      });\n      var renderedNode = this[RENDERER].getNode();\n      privateSetNodes(this, getRootNode(renderedNode));\n      (0, _Utils.privateSet)(this, OPTIONS, options);\n      (0, _Utils.privateSet)(this, PROVIDER_VALUES, providerValues);\n      var instance = renderedNode.instance;\n\n      if (instance && !options.disableLifecycleMethods) {\n        // Ensure to call componentDidUpdate when instance.setState is called\n        if (lifecycles.componentDidUpdate.onSetState && !instance[SET_STATE]) {\n          (0, _Utils.privateSet)(instance, SET_STATE, instance.setState);\n\n          instance.setState = function (updater) {\n            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n            return _this.setState.apply(_this, _toConsumableArray(callback == null ? [updater] : [updater, callback]));\n          };\n        }\n\n        if (typeof instance.componentDidMount === 'function') {\n          this[RENDERER].batchedUpdates(function () {\n            instance.componentDidMount();\n          });\n        }\n\n        privateSetChildContext(adapter, this, instance, renderedNode, getChildContextSpy);\n      } // creating a child component through enzyme's ShallowWrapper APIs.\n\n    } else {\n      (0, _Utils.privateSet)(this, ROOT, root);\n      (0, _Utils.privateSet)(this, UNRENDERED, null);\n      (0, _Utils.privateSet)(this, RENDERER, root[RENDERER]);\n      privateSetNodes(this, nodes);\n      (0, _Utils.privateSet)(this, OPTIONS, root[OPTIONS]);\n      (0, _Utils.privateSet)(this, ROOT_NODES, root[NODES]);\n      (0, _Utils.privateSet)(this, PROVIDER_VALUES, null);\n    }\n  }\n  /**\n   * Returns the root wrapper\n   *\n   * @return {ShallowWrapper}\n   */\n\n\n  _createClass(ShallowWrapper, [{\n    key: 'root',\n    value: function () {\n      function root() {\n        return this[ROOT];\n      }\n\n      return root;\n    }()\n    /**\n     * Returns the wrapped component.\n     *\n     * @return {ReactComponent}\n     */\n\n  }, {\n    key: 'getNodeInternal',\n    value: function () {\n      function getNodeInternal() {\n        if (this.length !== 1) {\n          throw new Error('ShallowWrapper::getNode() can only be called when wrapping one node');\n        }\n\n        if (this[ROOT] === this) {\n          this.update();\n        }\n\n        return this[NODE];\n      }\n\n      return getNodeInternal;\n    }()\n    /**\n     * Returns the the wrapped components.\n     *\n     * @return {Array<ReactComponent>}\n     */\n\n  }, {\n    key: 'getNodesInternal',\n    value: function () {\n      function getNodesInternal() {\n        if (this[ROOT] === this && this.length === 1) {\n          this.update();\n        }\n\n        return this[NODES];\n      }\n\n      return getNodesInternal;\n    }()\n    /**\n     * Returns the wrapped ReactElement.\n     *\n     * @return {ReactElement}\n     */\n\n  }, {\n    key: 'getElement',\n    value: function () {\n      function getElement() {\n        var _this2 = this;\n\n        return this.single('getElement', function (n) {\n          return (0, _getAdapter2['default'])(_this2[OPTIONS]).nodeToElement(n);\n        });\n      }\n\n      return getElement;\n    }()\n    /**\n     * Returns the wrapped ReactElements.\n     *\n     * @return {Array<ReactElement>}\n     */\n\n  }, {\n    key: 'getElements',\n    value: function () {\n      function getElements() {\n        var _this3 = this;\n\n        return this.getNodesInternal().map(function (n) {\n          return (0, _getAdapter2['default'])(_this3[OPTIONS]).nodeToElement(n);\n        });\n      }\n\n      return getElements;\n    }() // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: 'getNode',\n    value: function () {\n      function getNode() {\n        throw new Error('ShallowWrapper::getNode() is no longer supported. Use ShallowWrapper::getElement() instead');\n      }\n\n      return getNode;\n    }() // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: 'getNodes',\n    value: function () {\n      function getNodes() {\n        throw new Error('ShallowWrapper::getNodes() is no longer supported. Use ShallowWrapper::getElements() instead');\n      }\n\n      return getNodes;\n    }()\n    /**\n     * Gets the instance of the component being rendered as the root node passed into `shallow()`.\n     *\n     * NOTE: can only be called on a wrapper instance that is also the root instance.\n     *\n     * Example:\n     * ```\n     * const wrapper = shallow(<MyComponent />);\n     * const inst = wrapper.instance();\n     * expect(inst).to.be.instanceOf(MyComponent);\n     * ```\n     * @returns {ReactComponent}\n     */\n\n  }, {\n    key: 'instance',\n    value: function () {\n      function instance() {\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::instance() can only be called on the root');\n        }\n\n        return this[RENDERER].getNode().instance;\n      }\n\n      return instance;\n    }()\n    /**\n     * If a `wrappingComponent` was passed in `options`, this methods returns a `ShallowWrapper`\n     * around the rendered `wrappingComponent`. This `ShallowWrapper` can be used to update the\n     * `wrappingComponent`'s props, state, etc.\n     *\n     * @returns ShallowWrapper\n     */\n\n  }, {\n    key: 'getWrappingComponent',\n    value: function () {\n      function getWrappingComponent() {\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n        }\n\n        if (!this[OPTIONS].wrappingComponent) {\n          throw new Error('ShallowWrapper::getWrappingComponent() can only be called on a wrapper that was originally passed a `wrappingComponent` option');\n        }\n\n        return this[WRAPPING_COMPONENT];\n      }\n\n      return getWrappingComponent;\n    }()\n    /**\n     * Forces a re-render. Useful to run before checking the render output if something external\n     * may be updating the state of the component somewhere.\n     *\n     * NOTE: can only be called on a wrapper instance that is also the root instance.\n     *\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'update',\n    value: function () {\n      function update() {\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::update() can only be called on the root');\n        }\n\n        if (this.length !== 1) {\n          throw new Error('ShallowWrapper::update() can only be called when wrapping one node');\n        }\n\n        privateSetNodes(this, getRootNode(this[RENDERER].getNode()));\n        return this;\n      }\n\n      return update;\n    }()\n    /**\n     * A method that unmounts the component. This can be used to simulate a component going through\n     * and unmount/mount lifecycle.\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'unmount',\n    value: function () {\n      function unmount() {\n        this[RENDERER].unmount();\n\n        if (this[ROOT][WRAPPING_COMPONENT]) {\n          this[ROOT][WRAPPING_COMPONENT].unmount();\n        }\n\n        return this;\n      }\n\n      return unmount;\n    }()\n    /**\n     * A method is for re-render with new props and context.\n     * This calls componentDidUpdate method if disableLifecycleMethods is not enabled.\n     *\n     * NOTE: can only be called on a wrapper instance that is also the root instance.\n     *\n     * @param {Object} props\n     * @param {Object} context\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'rerender',\n    value: function () {\n      function rerender(props, context) {\n        var _this4 = this;\n\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n        this.single('rerender', function () {\n          (0, _Utils.withSetStateAllowed)(function () {\n            // NOTE(lmr): In react 16, instances will be null for SFCs, but\n            // rerendering with props/context is still a valid thing to do. In\n            // this case, state will be undefined, but props/context will exist.\n            var node = _this4[RENDERER].getNode();\n\n            var instance = node.instance || {};\n            var type = node.type || {};\n            var state = instance.state;\n            var prevProps = instance.props || _this4[UNRENDERED].props;\n            var prevContext = instance.context || _this4[OPTIONS].context;\n            var nextContext = context || prevContext;\n\n            if (context) {\n              _this4[OPTIONS] = (0, _object2['default'])({}, _this4[OPTIONS], {\n                context: nextContext\n              });\n            }\n\n            _this4[RENDERER].batchedUpdates(function () {\n              // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n              // so we spy shouldComponentUpdate to get the result.\n              var lifecycles = getAdapterLifecycles(adapter);\n              var shouldRender = true;\n              var shouldComponentUpdateSpy = void 0;\n              var getChildContextSpy = void 0;\n\n              if (!_this4[OPTIONS].disableLifecycleMethods && instance) {\n                if (typeof instance.shouldComponentUpdate === 'function') {\n                  var gDSFP = lifecycles.getDerivedStateFromProps;\n\n                  if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n                    mockSCUIfgDSFPReturnNonNull(node, state);\n                  }\n\n                  shouldComponentUpdateSpy = (0, _Utils.spyMethod)(instance, 'shouldComponentUpdate');\n                }\n\n                if (lifecycles.getChildContext.calledByRenderer && typeof instance.getChildContext === 'function') {\n                  getChildContextSpy = (0, _Utils.spyMethod)(instance, 'getChildContext');\n                }\n              }\n\n              if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n                shouldRender = pureComponentShouldComponentUpdate(prevProps, props, state, instance.state);\n              }\n\n              if (props) _this4[UNRENDERED] = (0, _Utils.cloneElement)(adapter, _this4[UNRENDERED], props);\n\n              _this4[RENDERER].render(_this4[UNRENDERED], nextContext, {\n                providerValues: _this4[PROVIDER_VALUES]\n              });\n\n              if (shouldComponentUpdateSpy) {\n                shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n                shouldComponentUpdateSpy.restore();\n              }\n\n              if (shouldRender && !_this4[OPTIONS].disableLifecycleMethods && instance) {\n                privateSetChildContext(adapter, _this4, instance, node, getChildContextSpy);\n\n                if (lifecycles.getSnapshotBeforeUpdate) {\n                  var snapshot = void 0;\n\n                  if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n                    snapshot = instance.getSnapshotBeforeUpdate(prevProps, state);\n                  }\n\n                  if (lifecycles.componentDidUpdate && typeof instance.componentDidUpdate === 'function' && (!state || (0, _enzymeShallowEqual2['default'])(state, _this4.instance().state) || typeof type.getDerivedStateFromProps === 'function')) {\n                    instance.componentDidUpdate(prevProps, state, snapshot);\n                  }\n                } else if (lifecycles.componentDidUpdate && typeof instance.componentDidUpdate === 'function') {\n                  if (lifecycles.componentDidUpdate.prevContext) {\n                    instance.componentDidUpdate(prevProps, state, prevContext);\n                  } else if (!state || (0, _enzymeShallowEqual2['default'])(_this4.instance().state, state)) {\n                    instance.componentDidUpdate(prevProps, state);\n                  }\n                } // If it doesn't need to rerender, update only its props.\n\n              } else if (!(0, _enzymeShallowEqual2['default'])(props, instance.props)) {\n                instance.props = (Object.freeze || Object)((0, _object2['default'])({}, instance.props, props));\n              }\n\n              _this4.update();\n            });\n          });\n        });\n        return this;\n      }\n\n      return rerender;\n    }()\n    /**\n     * A method that sets the props of the root component, and re-renders. Useful for when you are\n     * wanting to test how the component behaves over time with changing props. Calling this, for\n     * instance, will call the `componentWillReceiveProps` lifecycle method.\n     *\n     * Similar to `setState`, this method accepts a props object and will merge it in with the already\n     * existing props.\n     *\n     * NOTE: can only be called on a wrapper instance that is also the root instance.\n     *\n     * @param {Object} props object\n     * @param {Function} cb - callback function\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'setProps',\n    value: function () {\n      function setProps(props) {\n        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::setProps() can only be called on the root');\n        }\n\n        if (arguments.length > 1 && typeof callback !== 'function') {\n          throw new TypeError('ReactWrapper::setProps() expects a function as its second argument');\n        }\n\n        this.rerender(props);\n\n        if (callback) {\n          callback();\n        }\n\n        return this;\n      }\n\n      return setProps;\n    }()\n    /**\n     * A method to invoke `setState` on the root component instance similar to how you might in the\n     * definition of the component, and re-renders.  This method is useful for testing your component\n     * in hard to achieve states, however should be used sparingly. If possible, you should utilize\n     * your component's external API in order to get it into whatever state you want to test, in order\n     * to be as accurate of a test as possible. This is not always practical, however.\n     *\n     * NOTE: can only be called on a wrapper instance that is also the root instance.\n     *\n     * @param {Object} state to merge\n     * @param {Function} cb - callback function\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'setState',\n    value: function () {\n      function setState(state) {\n        var _this5 = this;\n\n        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::setState() can only be called on the root');\n        }\n\n        if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n          throw new Error('ShallowWrapper::setState() can only be called on class components');\n        }\n\n        if (arguments.length > 1 && typeof callback !== 'function') {\n          throw new TypeError('ReactWrapper::setState() expects a function as its second argument');\n        }\n\n        this.single('setState', function () {\n          (0, _Utils.withSetStateAllowed)(function () {\n            var adapter = (0, _getAdapter2['default'])(_this5[OPTIONS]);\n            var lifecycles = getAdapterLifecycles(adapter);\n\n            var node = _this5[RENDERER].getNode();\n\n            var instance = node.instance;\n            var prevProps = instance.props;\n            var prevState = instance.state;\n            var prevContext = instance.context;\n            var statePayload = typeof state === 'function' ? state.call(instance, prevState, prevProps) : state; // returning null or undefined prevents the update in React 16+\n            // https://github.com/facebook/react/pull/12756\n\n            var maybeHasUpdate = !lifecycles.setState.skipsComponentDidUpdateOnNullish || statePayload != null; // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n            // so we spy shouldComponentUpdate to get the result.\n\n            var shouldComponentUpdateSpy = void 0;\n            var getChildContextSpy = void 0;\n            var shouldRender = true;\n\n            if (!_this5[OPTIONS].disableLifecycleMethods && instance) {\n              if (lifecycles.componentDidUpdate && lifecycles.componentDidUpdate.onSetState && typeof instance.shouldComponentUpdate === 'function') {\n                var gDSFP = lifecycles.getDerivedStateFromProps;\n\n                if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n                  mockSCUIfgDSFPReturnNonNull(node, state);\n                }\n\n                shouldComponentUpdateSpy = (0, _Utils.spyMethod)(instance, 'shouldComponentUpdate');\n              }\n\n              if (lifecycles.getChildContext.calledByRenderer && typeof instance.getChildContext === 'function') {\n                getChildContextSpy = (0, _Utils.spyMethod)(instance, 'getChildContext');\n              }\n            }\n\n            if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n              shouldRender = pureComponentShouldComponentUpdate(prevProps, instance.props, prevState, (0, _object2['default'])({}, prevState, statePayload));\n            } // We don't pass the setState callback here\n            // to guarantee to call the callback after finishing the render\n\n\n            if (instance[SET_STATE]) {\n              instance[SET_STATE](statePayload);\n            } else {\n              instance.setState(statePayload);\n            }\n\n            if (shouldComponentUpdateSpy) {\n              shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n              shouldComponentUpdateSpy.restore();\n            }\n\n            if (maybeHasUpdate && shouldRender && !_this5[OPTIONS].disableLifecycleMethods) {\n              privateSetChildContext(adapter, _this5, instance, node, getChildContextSpy);\n\n              if (lifecycles.componentDidUpdate && lifecycles.componentDidUpdate.onSetState) {\n                if (lifecycles.getSnapshotBeforeUpdate && typeof instance.getSnapshotBeforeUpdate === 'function') {\n                  var snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);\n\n                  if (typeof instance.componentDidUpdate === 'function') {\n                    instance.componentDidUpdate(prevProps, prevState, snapshot);\n                  }\n                } else if (typeof instance.componentDidUpdate === 'function') {\n                  if (lifecycles.componentDidUpdate.prevContext) {\n                    instance.componentDidUpdate(prevProps, prevState, prevContext);\n                  } else {\n                    instance.componentDidUpdate(prevProps, prevState);\n                  }\n                }\n              }\n            }\n\n            _this5.update(); // call the setState callback\n\n\n            if (callback) {\n              if (adapter.invokeSetStateCallback) {\n                adapter.invokeSetStateCallback(instance, callback);\n              } else {\n                callback.call(instance);\n              }\n            }\n          });\n        });\n        return this;\n      }\n\n      return setState;\n    }()\n    /**\n     * A method that sets the context of the root component, and re-renders. Useful for when you are\n     * wanting to test how the component behaves over time with changing contexts.\n     *\n     * NOTE: can only be called on a wrapper instance that is also the root instance.\n     *\n     * @param {Object} context object\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'setContext',\n    value: function () {\n      function setContext(context) {\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::setContext() can only be called on the root');\n        }\n\n        if (!this[OPTIONS].context) {\n          throw new Error('ShallowWrapper::setContext() can only be called on a wrapper that was originally passed a context option');\n        }\n\n        return this.rerender(null, context);\n      }\n\n      return setContext;\n    }()\n    /**\n     * Whether or not a given react element exists in the shallow render tree.\n     *\n     * Example:\n     * ```\n     * const wrapper = shallow(<MyComponent />);\n     * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n     * ```\n     *\n     * @param {ReactElement|Array<ReactElement>} nodeOrNodes\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'contains',\n    value: function () {\n      function contains(nodeOrNodes) {\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n\n        if (!(0, _Utils.isReactElementAlike)(nodeOrNodes, adapter)) {\n          throw new Error('ShallowWrapper::contains() can only be called with a ReactElement (or an array of them), a string, or a number as an argument.');\n        }\n\n        var predicate = Array.isArray(nodeOrNodes) ? function (other) {\n          return (0, _Utils.containsChildrenSubArray)(_Utils.nodeEqual, other, nodeOrNodes.map(function (node) {\n            return adapter.elementToNode(node);\n          }));\n        } : function (other) {\n          return (0, _Utils.nodeEqual)(adapter.elementToNode(nodeOrNodes), other);\n        };\n        return findWhereUnwrapped(this, predicate).length > 0;\n      }\n\n      return contains;\n    }()\n    /**\n     * Whether or not a given react element exists in the shallow render tree.\n     * Match is based on the expected element and not on wrappers element.\n     * It will determine if one of the wrappers element \"looks like\" the expected\n     * element by checking if all props of the expected element are present\n     * on the wrappers element and equals to each other.\n     *\n     * Example:\n     * ```\n     * // MyComponent outputs <div><div class=\"foo\">Hello</div></div>\n     * const wrapper = shallow(<MyComponent />);\n     * expect(wrapper.containsMatchingElement(<div>Hello</div>)).to.equal(true);\n     * ```\n     *\n     * @param {ReactElement} node\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'containsMatchingElement',\n    value: function () {\n      function containsMatchingElement(node) {\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n        var rstNode = adapter.elementToNode(node);\n\n        var predicate = function () {\n          function predicate(other) {\n            return (0, _Utils.nodeMatches)(rstNode, other, function (a, b) {\n              return a <= b;\n            });\n          }\n\n          return predicate;\n        }();\n\n        return findWhereUnwrapped(this, predicate).length > 0;\n      }\n\n      return containsMatchingElement;\n    }()\n    /**\n     * Whether or not all the given react elements exist in the shallow render tree.\n     * Match is based on the expected element and not on wrappers element.\n     * It will determine if one of the wrappers element \"looks like\" the expected\n     * element by checking if all props of the expected element are present\n     * on the wrappers element and equals to each other.\n     *\n     * Example:\n     * ```\n     * const wrapper = shallow(<MyComponent />);\n     * expect(wrapper.containsAllMatchingElements([\n     *   <div>Hello</div>,\n     *   <div>Goodbye</div>,\n     * ])).to.equal(true);\n     * ```\n     *\n     * @param {Array<ReactElement>} nodes\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'containsAllMatchingElements',\n    value: function () {\n      function containsAllMatchingElements(nodes) {\n        var _this6 = this;\n\n        if (!Array.isArray(nodes)) {\n          throw new TypeError('nodes should be an Array');\n        }\n\n        return nodes.every(function (node) {\n          return _this6.containsMatchingElement(node);\n        });\n      }\n\n      return containsAllMatchingElements;\n    }()\n    /**\n     * Whether or not one of the given react elements exists in the shallow render tree.\n     * Match is based on the expected element and not on wrappers element.\n     * It will determine if one of the wrappers element \"looks like\" the expected\n     * element by checking if all props of the expected element are present\n     * on the wrappers element and equals to each other.\n     *\n     * Example:\n     * ```\n     * const wrapper = shallow(<MyComponent />);\n     * expect(wrapper.containsAnyMatchingElements([\n     *   <div>Hello</div>,\n     *   <div>Goodbye</div>,\n     * ])).to.equal(true);\n     * ```\n     *\n     * @param {Array<ReactElement>} nodes\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'containsAnyMatchingElements',\n    value: function () {\n      function containsAnyMatchingElements(nodes) {\n        var _this7 = this;\n\n        return Array.isArray(nodes) && nodes.some(function (node) {\n          return _this7.containsMatchingElement(node);\n        });\n      }\n\n      return containsAnyMatchingElements;\n    }()\n    /**\n     * Whether or not a given react element exists in the render tree.\n     *\n     * Example:\n     * ```\n     * const wrapper = shallow(<MyComponent />);\n     * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n     * ```\n     *\n     * @param {ReactElement} node\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'equals',\n    value: function () {\n      function equals(node) {\n        var _this8 = this;\n\n        return this.single('equals', function () {\n          return (0, _Utils.nodeEqual)(_this8.getNodeInternal(), node);\n        });\n      }\n\n      return equals;\n    }()\n    /**\n     * Whether or not a given react element matches the render tree.\n     * Match is based on the expected element and not on wrapper root node.\n     * It will determine if the wrapper root node \"looks like\" the expected\n     * element by checking if all props of the expected element are present\n     * on the wrapper root node and equals to each other.\n     *\n     * Example:\n     * ```\n     * // MyComponent outputs <div class=\"foo\">Hello</div>\n     * const wrapper = shallow(<MyComponent />);\n     * expect(wrapper.matchesElement(<div>Hello</div>)).to.equal(true);\n     * ```\n     *\n     * @param {ReactElement} node\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'matchesElement',\n    value: function () {\n      function matchesElement(node) {\n        var _this9 = this;\n\n        return this.single('matchesElement', function () {\n          var adapter = (0, _getAdapter2['default'])(_this9[OPTIONS]);\n          var rstNode = adapter.elementToNode(node);\n          return (0, _Utils.nodeMatches)(rstNode, _this9.getNodeInternal(), function (a, b) {\n            return a <= b;\n          });\n        });\n      }\n\n      return matchesElement;\n    }()\n    /**\n     * Finds every node in the render tree of the current wrapper that matches the provided selector.\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'find',\n    value: function () {\n      function find(selector) {\n        return this.wrap((0, _selectors.reduceTreesBySelector)(selector, this.getNodesInternal()));\n      }\n\n      return find;\n    }()\n    /**\n     * Returns whether or not current node matches a provided selector.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'is',\n    value: function () {\n      function is(selector) {\n        var predicate = (0, _selectors.buildPredicate)(selector);\n        return this.single('is', function (n) {\n          return predicate(n);\n        });\n      }\n\n      return is;\n    }()\n    /**\n     * Returns true if the component rendered nothing, i.e., null or false.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEmptyRender',\n    value: function () {\n      function isEmptyRender() {\n        var nodes = this.getNodesInternal();\n        return nodes.every(function (n) {\n          return (0, _Utils.isEmptyValue)(n);\n        });\n      }\n\n      return isEmptyRender;\n    }()\n    /**\n     * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n     * the provided predicate function. The predicate should receive a wrapped node as its first\n     * argument.\n     *\n     * @param {Function} predicate\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'filterWhere',\n    value: function () {\n      function filterWhere(predicate) {\n        var _this10 = this;\n\n        return filterWhereUnwrapped(this, function (n) {\n          return predicate(_this10.wrap(n));\n        });\n      }\n\n      return filterWhere;\n    }()\n    /**\n     * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n     * the provided selector.\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'filter',\n    value: function () {\n      function filter(selector) {\n        var predicate = (0, _selectors.buildPredicate)(selector);\n        return filterWhereUnwrapped(this, predicate);\n      }\n\n      return filter;\n    }()\n    /**\n     * Returns a new wrapper instance with only the nodes of the current wrapper that did not match\n     * the provided selector. Essentially the inverse of `filter`.\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'not',\n    value: function () {\n      function not(selector) {\n        var predicate = (0, _selectors.buildPredicate)(selector);\n        return filterWhereUnwrapped(this, function (n) {\n          return !predicate(n);\n        });\n      }\n\n      return not;\n    }()\n    /**\n     * Returns a string of the rendered text of the current render tree.  This function should be\n     * looked at with skepticism if being used to test what the actual HTML output of the component\n     * will be. If that is what you would like to test, use enzyme's `render` function instead.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: 'text',\n    value: function () {\n      function text() {\n        return this.single('text', _RSTTraversal.getTextFromNode);\n      }\n\n      return text;\n    }()\n    /**\n     * Returns the HTML of the node.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: 'html',\n    value: function () {\n      function html() {\n        var _this11 = this;\n\n        return this.single('html', function (n) {\n          if (_this11.type() === null) return null;\n          var adapter = (0, _getAdapter2['default'])(_this11[OPTIONS]);\n          var renderer = adapter.createRenderer((0, _object2['default'])({}, _this11[OPTIONS], {\n            mode: 'string'\n          }));\n          return renderer.render(adapter.nodeToElement(n));\n        });\n      }\n\n      return html;\n    }()\n    /**\n     * Returns the current node rendered to HTML and wrapped in a CheerioWrapper.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @returns {CheerioWrapper}\n     */\n\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var html = this.html();\n        return (0, _Utils.loadCheerioRoot)(html);\n      }\n\n      return render;\n    }()\n    /**\n     * Used to simulate events. Pass an eventname and (optionally) event arguments. This method of\n     * testing events should be met with some skepticism.\n     *\n     * @param {String} event\n     * @param {Array} args\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'simulate',\n    value: function () {\n      function simulate(event) {\n        var _this12 = this;\n\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        return this.single('simulate', function (n) {\n          var _RENDERER;\n\n          (_RENDERER = _this12[RENDERER]).simulateEvent.apply(_RENDERER, [n, event].concat(args));\n\n          _this12[ROOT].update();\n\n          return _this12;\n        });\n      }\n\n      return simulate;\n    }()\n    /**\n     * Used to simulate throwing a rendering error. Pass an error to throw.\n     *\n     * @param {String} error\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'simulateError',\n    value: function () {\n      function simulateError(error) {\n        var _this13 = this; // in shallow, the \"root\" is the \"rendered\" thing.\n\n\n        return this.single('simulateError', function (thisNode) {\n          if (thisNode.nodeType === 'host') {\n            throw new TypeError('ShallowWrapper::simulateError() can only be called on custom components');\n          }\n\n          var renderer = _this13[RENDERER];\n\n          if (typeof renderer.simulateError !== 'function') {\n            throw new TypeError('your adapter does not support `simulateError`. Try upgrading it!');\n          }\n\n          var rootNode = getRootNodeInternal(_this13);\n          var nodeHierarchy = [thisNode].concat(nodeParents(_this13, thisNode));\n          renderer.simulateError(nodeHierarchy, rootNode, error);\n          return _this13;\n        });\n      }\n\n      return simulateError;\n    }()\n    /**\n     * Returns the props hash for the current node of the wrapper.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'props',\n    value: function () {\n      function props() {\n        return this.single('props', _RSTTraversal.propsOfNode);\n      }\n\n      return props;\n    }()\n    /**\n     * Returns the state hash for the root node of the wrapper. Optionally pass in a prop name and it\n     * will return just that value.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @param {String} name (optional)\n     * @returns {*}\n     */\n\n  }, {\n    key: 'state',\n    value: function () {\n      function state(name) {\n        var _this14 = this;\n\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::state() can only be called on the root');\n        }\n\n        if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n          throw new Error('ShallowWrapper::state() can only be called on class components');\n        }\n\n        var _state = this.single('state', function () {\n          return _this14.instance().state;\n        });\n\n        if (typeof name !== 'undefined') {\n          if (_state == null) {\n            throw new TypeError('ShallowWrapper::state(\"' + String(name) + '\") requires that `state` not be `null` or `undefined`');\n          }\n\n          return _state[name];\n        }\n\n        return _state;\n      }\n\n      return state;\n    }()\n    /**\n     * Returns the context hash for the root node of the wrapper.\n     * Optionally pass in a prop name and it will return just that value.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @param {String} name (optional)\n     * @returns {*}\n     */\n\n  }, {\n    key: 'context',\n    value: function () {\n      function context(name) {\n        var _this15 = this;\n\n        if (this[ROOT] !== this) {\n          throw new Error('ShallowWrapper::context() can only be called on the root');\n        }\n\n        if (!this[OPTIONS].context) {\n          throw new Error('ShallowWrapper::context() can only be called on a wrapper that was originally passed a context option');\n        }\n\n        if (this.instance() === null) {\n          throw new Error('ShallowWrapper::context() can only be called on wrapped nodes that have a non-null instance');\n        }\n\n        var _context = this.single('context', function () {\n          return _this15.instance().context;\n        });\n\n        if (name) {\n          return _context[name];\n        }\n\n        return _context;\n      }\n\n      return context;\n    }()\n    /**\n     * Returns a new wrapper with all of the children of the current wrapper.\n     *\n     * @param {EnzymeSelector} [selector]\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'children',\n    value: function () {\n      function children(selector) {\n        var allChildren = this.flatMap(function (n) {\n          return (0, _RSTTraversal.childrenOfNode)(n.getNodeInternal());\n        });\n        return selector ? allChildren.filter(selector) : allChildren;\n      }\n\n      return children;\n    }()\n    /**\n     * Returns a new wrapper with a specific child\n     *\n     * @param {Number} [index]\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'childAt',\n    value: function () {\n      function childAt(index) {\n        var _this16 = this;\n\n        return this.single('childAt', function () {\n          return _this16.children().at(index);\n        });\n      }\n\n      return childAt;\n    }()\n    /**\n     * Returns a wrapper around all of the parents/ancestors of the wrapper. Does not include the node\n     * in the current wrapper.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @param {EnzymeSelector} [selector]\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'parents',\n    value: function () {\n      function parents(selector) {\n        var _this17 = this;\n\n        return this.single('parents', function (n) {\n          var allParents = _this17.wrap(nodeParents(_this17, n));\n\n          return selector ? allParents.filter(selector) : allParents;\n        });\n      }\n\n      return parents;\n    }()\n    /**\n     * Returns a wrapper around the immediate parent of the current node.\n     *\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'parent',\n    value: function () {\n      function parent() {\n        return this.flatMap(function (n) {\n          return [n.parents().get(0)];\n        });\n      }\n\n      return parent;\n    }()\n    /**\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'closest',\n    value: function () {\n      function closest(selector) {\n        if (this.is(selector)) {\n          return this;\n        }\n\n        var matchingAncestors = this.parents().filter(selector);\n        return matchingAncestors.length > 0 ? matchingAncestors.first() : this.findWhere(function () {\n          return false;\n        });\n      }\n\n      return closest;\n    }()\n    /**\n     * Shallow renders the current node and returns a shallow wrapper around it.\n     *\n     * NOTE: can only be called on wrapper of a single node.\n     *\n     * @param {Object} options\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'shallow',\n    value: function () {\n      function shallow() {\n        var _this18 = this;\n\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return this.single('shallow', function (n) {\n          var childOptions = makeInheritedChildOptions(_this18, options);\n          return _this18.wrap((0, _getAdapter2['default'])(_this18[OPTIONS]).nodeToElement(n), null, childOptions);\n        });\n      }\n\n      return shallow;\n    }()\n    /**\n     * Returns the value of prop with the given name of the current node.\n     *\n     * @param propName\n     * @returns {*}\n     */\n\n  }, {\n    key: 'prop',\n    value: function () {\n      function prop(propName) {\n        return this.props()[propName];\n      }\n\n      return prop;\n    }()\n    /**\n     * Used to invoke a function prop.\n     * Will invoke an function prop and return its value.\n     *\n     * @param {String} propName\n     * @returns {Any}\n     */\n\n  }, {\n    key: 'invoke',\n    value: function () {\n      function invoke(propName) {\n        var _this19 = this;\n\n        return this.single('invoke', function () {\n          var handler = _this19.prop(propName);\n\n          if (typeof handler !== 'function') {\n            throw new TypeError('ShallowWrapper::invoke() requires the name of a prop whose value is a function');\n          }\n\n          return function () {\n            var response = handler.apply(undefined, arguments);\n\n            _this19[ROOT].update();\n\n            return response;\n          };\n        });\n      }\n\n      return invoke;\n    }()\n    /**\n     * Returns a wrapper of the node rendered by the provided render prop.\n     *\n     * @param {String} propName\n     * @returns {Function}\n     */\n\n  }, {\n    key: 'renderProp',\n    value: function () {\n      function renderProp(propName) {\n        var _this20 = this;\n\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n\n        if (typeof adapter.wrap !== 'function') {\n          throw new RangeError('your adapter does not support `wrap`. Try upgrading it!');\n        }\n\n        return this.single('renderProp', function (n) {\n          if (n.nodeType === 'host') {\n            throw new TypeError('ShallowWrapper::renderProp() can only be called on custom components');\n          }\n\n          if (typeof propName !== 'string') {\n            throw new TypeError('ShallowWrapper::renderProp(): `propName` must be a string');\n          }\n\n          var props = _this20.props();\n\n          if (!(0, _has2['default'])(props, propName)) {\n            throw new Error('ShallowWrapper::renderProp(): no prop called \\u201C' + String(propName) + '\\u201C found');\n          }\n\n          var propValue = props[propName];\n\n          if (typeof propValue !== 'function') {\n            throw new TypeError('ShallowWrapper::renderProp(): expected prop \\u201C' + String(propName) + '\\u201C to contain a function, but it holds \\u201C' + (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) + '\\u201C');\n          }\n\n          return function () {\n            var element = propValue.apply(undefined, arguments);\n            var wrapped = adapter.wrap(element);\n            return _this20.wrap(wrapped, null, _this20[OPTIONS]);\n          };\n        });\n      }\n\n      return renderProp;\n    }()\n    /**\n     * Returns the key assigned to the current node.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: 'key',\n    value: function () {\n      function key() {\n        return this.single('key', function (n) {\n          return n.key === undefined ? null : n.key;\n        });\n      }\n\n      return key;\n    }()\n    /**\n     * Returns the type of the current node of this wrapper. If it's a composite component, this will\n     * be the component constructor. If it's a native DOM node, it will be a string of the tag name.\n     * If it's null, it will be null.\n     *\n     * @returns {String|Function|null}\n     */\n\n  }, {\n    key: 'type',\n    value: function () {\n      function type() {\n        return this.single('type', function (n) {\n          return (0, _Utils.typeOfNode)(n);\n        });\n      }\n\n      return type;\n    }()\n    /**\n     * Returns the name of the current node of this wrapper.\n     *\n     * In order of precedence => type.displayName -> type.name -> type.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: 'name',\n    value: function () {\n      function name() {\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n        return this.single('name', function (n) {\n          return adapter.displayNameOfNode ? adapter.displayNameOfNode(n) : (0, _Utils.displayNameOfNode)(n);\n        });\n      }\n\n      return name;\n    }()\n    /**\n     * Returns whether or not the current node has the given class name or not.\n     *\n     * NOTE: can only be called on a wrapper of a single node.\n     *\n     * @param className\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'hasClass',\n    value: function () {\n      function hasClass(className) {\n        if (typeof className === 'string' && className.indexOf('.') !== -1) {\n          // eslint-disable-next-line no-console\n          console.warn('It looks like you\\'re calling `ShallowWrapper::hasClass()` with a CSS selector. hasClass() expects a class name, not a CSS selector.');\n        }\n\n        return this.single('hasClass', function (n) {\n          return (0, _RSTTraversal.hasClassName)(n, className);\n        });\n      }\n\n      return hasClass;\n    }()\n    /**\n     * Iterates through each node of the current wrapper and executes the provided function with a\n     * wrapper around the corresponding node passed in as the first argument.\n     *\n     * @param {Function} fn\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'forEach',\n    value: function () {\n      function forEach(fn) {\n        var _this21 = this;\n\n        this.getNodesInternal().forEach(function (n, i) {\n          return fn.call(_this21, _this21.wrap(n), i);\n        });\n        return this;\n      }\n\n      return forEach;\n    }()\n    /**\n     * Maps the current array of nodes to another array. Each node is passed in as a `ShallowWrapper`\n     * to the map function.\n     *\n     * @param {Function} fn\n     * @returns {Array}\n     */\n\n  }, {\n    key: 'map',\n    value: function () {\n      function map(fn) {\n        var _this22 = this;\n\n        return this.getNodesInternal().map(function (n, i) {\n          return fn.call(_this22, _this22.wrap(n), i);\n        });\n      }\n\n      return map;\n    }()\n    /**\n     * Reduces the current array of nodes to a value. Each node is passed in as a `ShallowWrapper`\n     * to the reducer function.\n     *\n     * @param {Function} fn - the reducer function\n     * @param {*} initialValue - the initial value\n     * @returns {*}\n     */\n\n  }, {\n    key: 'reduce',\n    value: function () {\n      function reduce(fn) {\n        var _this23 = this;\n\n        var initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n        if (arguments.length > 1) {\n          return this.getNodesInternal().reduce(function (accum, n, i) {\n            return fn.call(_this23, accum, _this23.wrap(n), i);\n          }, initialValue);\n        }\n\n        return this.getNodesInternal().reduce(function (accum, n, i) {\n          return fn.call(_this23, i === 1 ? _this23.wrap(accum) : accum, _this23.wrap(n), i);\n        });\n      }\n\n      return reduce;\n    }()\n    /**\n     * Reduces the current array of nodes to another array, from right to left. Each node is passed\n     * in as a `ShallowWrapper` to the reducer function.\n     *\n     * @param {Function} fn - the reducer function\n     * @param {*} initialValue - the initial value\n     * @returns {*}\n     */\n\n  }, {\n    key: 'reduceRight',\n    value: function () {\n      function reduceRight(fn) {\n        var _this24 = this;\n\n        var initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n        if (arguments.length > 1) {\n          return this.getNodesInternal().reduceRight(function (accum, n, i) {\n            return fn.call(_this24, accum, _this24.wrap(n), i);\n          }, initialValue);\n        }\n\n        return this.getNodesInternal().reduceRight(function (accum, n, i) {\n          return fn.call(_this24, i === 1 ? _this24.wrap(accum) : accum, _this24.wrap(n), i);\n        });\n      }\n\n      return reduceRight;\n    }()\n    /**\n     * Returns a new wrapper with a subset of the nodes of the original wrapper, according to the\n     * rules of `Array#slice`.\n     *\n     * @param {Number} begin\n     * @param {Number} end\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'slice',\n    value: function () {\n      function slice(begin, end) {\n        return this.wrap(this.getNodesInternal().slice(begin, end));\n      }\n\n      return slice;\n    }()\n    /**\n     * Returns whether or not any of the nodes in the wrapper match the provided selector.\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'some',\n    value: function () {\n      function some(selector) {\n        if (this[ROOT] === this) {\n          throw new Error('ShallowWrapper::some() can not be called on the root');\n        }\n\n        var predicate = (0, _selectors.buildPredicate)(selector);\n        return this.getNodesInternal().some(predicate);\n      }\n\n      return some;\n    }()\n    /**\n     * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n     *\n     * @param {Function} predicate\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'someWhere',\n    value: function () {\n      function someWhere(predicate) {\n        var _this25 = this;\n\n        return this.getNodesInternal().some(function (n, i) {\n          return predicate.call(_this25, _this25.wrap(n), i);\n        });\n      }\n\n      return someWhere;\n    }()\n    /**\n     * Returns whether or not all of the nodes in the wrapper match the provided selector.\n     *\n     * @param {EnzymeSelector} selector\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'every',\n    value: function () {\n      function every(selector) {\n        var predicate = (0, _selectors.buildPredicate)(selector);\n        return this.getNodesInternal().every(predicate);\n      }\n\n      return every;\n    }()\n    /**\n     * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n     *\n     * @param {Function} predicate\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'everyWhere',\n    value: function () {\n      function everyWhere(predicate) {\n        var _this26 = this;\n\n        return this.getNodesInternal().every(function (n, i) {\n          return predicate.call(_this26, _this26.wrap(n), i);\n        });\n      }\n\n      return everyWhere;\n    }()\n    /**\n     * Utility method used to create new wrappers with a mapping function that returns an array of\n     * nodes in response to a single node wrapper. The returned wrapper is a single wrapper around\n     * all of the mapped nodes flattened (and de-duplicated).\n     *\n     * @param {Function} fn\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'flatMap',\n    value: function () {\n      function flatMap(fn) {\n        var _this27 = this;\n\n        var nodes = this.getNodesInternal().map(function (n, i) {\n          return fn.call(_this27, _this27.wrap(n), i);\n        });\n        var flattened = (0, _arrayPrototype2['default'])(nodes, 1);\n        return this.wrap(flattened.filter(Boolean));\n      }\n\n      return flatMap;\n    }()\n    /**\n     * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n     * function. The predicate function will receive the nodes inside a ShallowWrapper as its\n     * first argument.\n     *\n     * @param {Function} predicate\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'findWhere',\n    value: function () {\n      function findWhere(predicate) {\n        var _this28 = this;\n\n        return findWhereUnwrapped(this, function (n) {\n          var node = _this28.wrap(n);\n\n          return node.length > 0 && predicate(node);\n        });\n      }\n\n      return findWhere;\n    }()\n    /**\n     * Returns the node at a given index of the current wrapper.\n     *\n     * @param index\n     * @returns {ReactElement}\n     */\n\n  }, {\n    key: 'get',\n    value: function () {\n      function get(index) {\n        return this.getElements()[index];\n      }\n\n      return get;\n    }()\n    /**\n     * Returns a wrapper around the node at a given index of the current wrapper.\n     *\n     * @param index\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'at',\n    value: function () {\n      function at(index) {\n        var nodes = this.getNodesInternal();\n\n        if (index < nodes.length) {\n          return this.wrap(nodes[index]);\n        }\n\n        return this.wrap([]);\n      }\n\n      return at;\n    }()\n    /**\n     * Returns a wrapper around the first node of the current wrapper.\n     *\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'first',\n    value: function () {\n      function first() {\n        return this.at(0);\n      }\n\n      return first;\n    }()\n    /**\n     * Returns a wrapper around the last node of the current wrapper.\n     *\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'last',\n    value: function () {\n      function last() {\n        return this.at(this.length - 1);\n      }\n\n      return last;\n    }()\n    /**\n     * Delegates to exists()\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    value: function () {\n      function isEmpty() {\n        // eslint-disable-next-line no-console\n        console.warn('Enzyme::Deprecated method isEmpty() called, use exists() instead.');\n        return !this.exists();\n      }\n\n      return isEmpty;\n    }()\n    /**\n     * Returns true if the current wrapper has nodes. False otherwise.\n     * If called with a selector it returns `.find(selector).exists()` instead.\n     *\n     * @param {EnzymeSelector} selector (optional)\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'exists',\n    value: function () {\n      function exists() {\n        var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        return arguments.length > 0 ? this.find(selector).exists() : this.length > 0;\n      }\n\n      return exists;\n    }()\n    /**\n     * Utility method that throws an error if the current instance has a length other than one.\n     * This is primarily used to enforce that certain methods are only run on a wrapper when it is\n     * wrapping a single node.\n     *\n     * @param fn\n     * @returns {*}\n     */\n\n  }, {\n    key: 'single',\n    value: function () {\n      function single(name, fn) {\n        var fnName = typeof name === 'string' ? name : 'unknown';\n        var callback = typeof fn === 'function' ? fn : name;\n\n        if (this.length !== 1) {\n          throw new Error('Method \\u201C' + fnName + '\\u201D is meant to be run on 1 node. ' + String(this.length) + ' found instead.');\n        }\n\n        return callback.call(this, this.getNodeInternal());\n      }\n\n      return single;\n    }()\n    /**\n     * Helpful utility method to create a new wrapper with the same root as the current wrapper, with\n     * any nodes passed in as the first parameter automatically wrapped.\n     *\n     * @param node\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'wrap',\n    value: function () {\n      function wrap(node) {\n        var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[ROOT];\n\n        if (node instanceof ShallowWrapper) {\n          return node;\n        }\n\n        for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          args[_key3 - 2] = arguments[_key3];\n        }\n\n        return new (Function.prototype.bind.apply(ShallowWrapper, [null].concat([node, root], args)))();\n      }\n\n      return wrap;\n    }()\n    /**\n     * Returns an HTML-like string of the shallow render for debugging purposes.\n     *\n     * @param {Object} [options] - Property bag of additional options.\n     * @param {boolean} [options.ignoreProps] - if true, props are omitted from the string.\n     * @param {boolean} [options.verbose] - if true, arrays and objects to be verbosely printed.\n     * @returns {String}\n     */\n\n  }, {\n    key: 'debug',\n    value: function () {\n      function debug() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return (0, _Debug.debugNodes)(this.getNodesInternal(), options);\n      }\n\n      return debug;\n    }()\n    /**\n     * Invokes intercepter and returns itself. intercepter is called with itself.\n     * This is helpful when debugging nodes in method chains.\n     * @param fn\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'tap',\n    value: function () {\n      function tap(intercepter) {\n        intercepter(this);\n        return this;\n      }\n\n      return tap;\n    }()\n    /**\n     * Primarily useful for HOCs (higher-order components), this method may only be\n     * run on a single, non-DOM node, and will return the node, shallow-rendered.\n     *\n     * @param {Object} options\n     * @returns {ShallowWrapper}\n     */\n\n  }, {\n    key: 'dive',\n    value: function () {\n      function dive() {\n        var _this29 = this;\n\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n        var name = 'dive';\n        return this.single(name, function (n) {\n          if (n && n.nodeType === 'host') {\n            throw new TypeError('ShallowWrapper::' + name + '() can not be called on Host Components');\n          }\n\n          var el = (0, _getAdapter2['default'])(_this29[OPTIONS]).nodeToElement(n);\n\n          if (!(0, _Utils.isCustomComponentElement)(el, adapter)) {\n            throw new TypeError('ShallowWrapper::' + name + '() can only be called on components');\n          }\n\n          var childOptions = makeInheritedChildOptions(_this29, options);\n          return _this29.wrap(el, null, childOptions);\n        });\n      }\n\n      return dive;\n    }()\n    /**\n     * Strips out all the not host-nodes from the list of nodes\n     *\n     * This method is useful if you want to check for the presence of host nodes\n     * (actually rendered HTML elements) ignoring the React nodes.\n     */\n\n  }, {\n    key: 'hostNodes',\n    value: function () {\n      function hostNodes() {\n        return this.filterWhere(function (n) {\n          return typeof n.type() === 'string';\n        });\n      }\n\n      return hostNodes;\n    }()\n  }]);\n\n  return ShallowWrapper;\n}();\n/**\n * Updates the context of the primary wrapper when the\n * `wrappingComponent` re-renders.\n */\n\n\nfunction updatePrimaryRootContext(wrappingComponent) {\n  var adapter = (0, _getAdapter2['default'])(wrappingComponent[OPTIONS]);\n  var primaryWrapper = wrappingComponent[PRIMARY_WRAPPER];\n  var primaryRenderer = primaryWrapper[RENDERER];\n  var primaryNode = primaryRenderer.getNode();\n\n  var _getContextFromWrappi2 = getContextFromWrappingComponent(wrappingComponent, adapter),\n      legacyContext = _getContextFromWrappi2.legacyContext,\n      providerValues = _getContextFromWrappi2.providerValues;\n\n  var prevProviderValues = primaryWrapper[PROVIDER_VALUES];\n  primaryWrapper.setContext((0, _object2['default'])({}, wrappingComponent[PRIMARY_WRAPPER][OPTIONS].context, legacyContext));\n  primaryWrapper[PROVIDER_VALUES] = new Map([].concat(_toConsumableArray(prevProviderValues), _toConsumableArray(providerValues)));\n\n  if (typeof adapter.isContextConsumer === 'function' && adapter.isContextConsumer(primaryNode.type)) {\n    var Consumer = primaryNode.type; // Adapters with an `isContextConsumer` method will definitely have a `getProviderFromConsumer`\n    // method.\n\n    var Provider = adapter.getProviderFromConsumer(Consumer);\n    var newValue = providerValues.get(Provider);\n    var oldValue = prevProviderValues.get(Provider); // Use referential comparison like React\n\n    if (newValue !== oldValue) {\n      primaryWrapper.rerender();\n    }\n  }\n}\n/**\n * A *special* \"root\" wrapper that represents the component passed as `wrappingComponent`.\n * It is linked to the primary root such that updates to it will update the primary.\n *\n * @class WrappingComponentWrapper\n */\n\n\nvar WrappingComponentWrapper = function (_ShallowWrapper) {\n  _inherits(WrappingComponentWrapper, _ShallowWrapper);\n\n  function WrappingComponentWrapper(nodes, root, RootFinder) {\n    _classCallCheck(this, WrappingComponentWrapper);\n\n    var _this30 = _possibleConstructorReturn(this, (WrappingComponentWrapper.__proto__ || Object.getPrototypeOf(WrappingComponentWrapper)).call(this, nodes));\n\n    (0, _Utils.privateSet)(_this30, PRIMARY_WRAPPER, root);\n    (0, _Utils.privateSet)(_this30, ROOT_FINDER, RootFinder);\n    return _this30;\n  }\n  /**\n   * Like rerender() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n\n\n  _createClass(WrappingComponentWrapper, [{\n    key: 'rerender',\n    value: function () {\n      function rerender() {\n        var _get2;\n\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        var result = (_get2 = _get(WrappingComponentWrapper.prototype.__proto__ || Object.getPrototypeOf(WrappingComponentWrapper.prototype), 'rerender', this)).call.apply(_get2, [this].concat(args));\n\n        updatePrimaryRootContext(this);\n        return result;\n      }\n\n      return rerender;\n    }()\n    /**\n     * Like setState() on ShallowWrapper, except it also does a \"full render\" of\n     * itself and updates the primary ShallowWrapper's context.\n     */\n\n  }, {\n    key: 'setState',\n    value: function () {\n      function setState() {\n        var _get3;\n\n        for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        var result = (_get3 = _get(WrappingComponentWrapper.prototype.__proto__ || Object.getPrototypeOf(WrappingComponentWrapper.prototype), 'setState', this)).call.apply(_get3, [this].concat(args));\n\n        updatePrimaryRootContext(this);\n        return result;\n      }\n\n      return setState;\n    }() // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: 'getWrappingComponent',\n    value: function () {\n      function getWrappingComponent() {\n        throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n      }\n\n      return getWrappingComponent;\n    }()\n  }]);\n\n  return WrappingComponentWrapper;\n}(ShallowWrapper);\n\nif (_Utils.ITERATOR_SYMBOL) {\n  Object.defineProperty(ShallowWrapper.prototype, _Utils.ITERATOR_SYMBOL, {\n    configurable: true,\n    value: function () {\n      function iterator() {\n        var _ref2;\n\n        var iter = this.getNodesInternal()[_Utils.ITERATOR_SYMBOL]();\n\n        var adapter = (0, _getAdapter2['default'])(this[OPTIONS]);\n        return _ref2 = {}, _defineProperty(_ref2, _Utils.ITERATOR_SYMBOL, function () {\n          return this;\n        }), _defineProperty(_ref2, 'next', function () {\n          function next() {\n            var next = iter.next();\n\n            if (next.done) {\n              return {\n                done: true\n              };\n            }\n\n            return {\n              done: false,\n              value: adapter.nodeToElement(next.value)\n            };\n          }\n\n          return next;\n        }()), _ref2;\n      }\n\n      return iterator;\n    }()\n  });\n}\n\nfunction privateWarning(prop, extraMessage) {\n  Object.defineProperty(ShallowWrapper.prototype, prop, {\n    get: function () {\n      function get() {\n        throw new Error('\\n        Attempted to access ShallowWrapper::' + String(prop) + ', which was previously a private property on\\n        Enzyme ShallowWrapper instances, but is no longer and should not be relied upon.\\n        ' + String(extraMessage) + '\\n      ');\n      }\n\n      return get;\n    }(),\n    enumerable: false,\n    configurable: false\n  });\n}\n\nprivateWarning('node', 'Consider using the getElement() method instead.');\nprivateWarning('nodes', 'Consider using the getElements() method instead.');\nprivateWarning('renderer', '');\nprivateWarning('options', '');\nprivateWarning('complexSelector', '');\nexports['default'] = ShallowWrapper; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"mappings":"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","names":["NODE","NODES","RENDERER","UNRENDERED","ROOT","OPTIONS","SET_STATE","ROOT_NODES","CHILD_CONTEXT","WRAPPING_COMPONENT","PRIMARY_WRAPPER","ROOT_FINDER","PROVIDER_VALUES","findWhereUnwrapped","wrapper","predicate","filter","treeFilter","flatMap","n","getNodeInternal","filterWhereUnwrapped","wrap","getNodesInternal","Boolean","validateOptions","options","lifecycleExperimental","disableLifecycleMethods","enableComponentDidUpdateOnSetState","supportPrevContextArgumentOfComponentDidUpdate","lifecycles","Error","componentDidUpdate","onSetState","TypeError","prevContext","getAdapterLifecycles","hasLegacySetStateArg","hasLegacyPrevContextArg","originalGDSFP","getDerivedStateFromProps","hasShouldComponentUpdateBug","setState","getChildContext","calledByRenderer","getRootNode","node","nodeType","rendered","getRootNodeInternal","length","nodeParents","privateSetNodes","nodes","Array","isArray","pureComponentShouldComponentUpdate","prevProps","props","prevState","state","isPureComponent","instance","isPureReactComponent","hierarchy","renderer","Component","type","componentName","_typeof","childContextTypes","console","warn","childContext","Object","keys","forEach","key","checkPropTypes","spyOnGetChildContextInitialRender","adapter","prototype","privateSetChildContext","renderedNode","getChildContextSpy","legacyContextMode","getLastReturnValue","restore","nodeHierarchy","concat","mockSCUIfgDSFPReturnNonNull","originalSCU","shouldComponentUpdate","args","arguments","sCUResult","apply","nextState","deepRender","target","element","nodeToElement","dive","children","i","found","at","undefined","getContextFromWrappingComponent","rootFinder","legacyContext","context","providerValues","makeShallowOptions","root","passedOptions","wrappingComponent","wrapWithWrappingComponent","wrappedNode","RootFinder","WrappingComponentWrapper","wrappingComponentLegacyContext","wrappingComponentProviderValues","makeInheritedChildOptions","childOptions","ShallowWrapper","_classCallCheck","isValidElement","createRenderer","mode","Map","render","getNode","updater","callback","_this","componentDidMount","batchedUpdates","update","single","_this2","map","_this3","unmount","_this4","nextContext","shouldRender","shouldComponentUpdateSpy","gDSFP","getSnapshotBeforeUpdate","snapshot","freeze","rerender","_this5","statePayload","call","maybeHasUpdate","skipsComponentDidUpdateOnNullish","invokeSetStateCallback","nodeOrNodes","other","nodeEqual","elementToNode","rstNode","a","b","every","_this6","containsMatchingElement","some","_this7","_this8","_this9","selector","_this10","getTextFromNode","_this11","html","event","simulateEvent","_this12","error","thisNode","_this13","simulateError","rootNode","propsOfNode","name","_state","_this14","_context","_this15","allChildren","index","_this16","allParents","_this17","parents","get","is","matchingAncestors","first","findWhere","_this18","propName","handler","_this19","prop","response","RangeError","_this20","propValue","wrapped","displayNameOfNode","className","indexOf","fn","_this21","_this22","initialValue","reduce","accum","_this23","reduceRight","_this24","begin","end","slice","_this25","_this26","_this27","flattened","_this28","getElements","exists","find","fnName","intercepter","el","_this29","filterWhere","updatePrimaryRootContext","primaryWrapper","primaryRenderer","primaryNode","prevProviderValues","setContext","isContextConsumer","Consumer","Provider","getProviderFromConsumer","newValue","oldValue","result","ITERATOR_SYMBOL","defineProperty","configurable","value","iterator","iter","next","done","privateWarning","extraMessage","enumerable"],"sources":["/Users/sebas/Desktop/robofriends-testing/node_modules/enzyme/src/ShallowWrapper.js"],"sourcesContent":["import flat from 'array.prototype.flat';\nimport has from 'has';\nimport shallowEqual from 'enzyme-shallow-equal';\n\nimport {\n  nodeEqual,\n  nodeMatches,\n  containsChildrenSubArray,\n  withSetStateAllowed,\n  typeOfNode,\n  isReactElementAlike,\n  displayNameOfNode,\n  isCustomComponent,\n  isCustomComponentElement,\n  ITERATOR_SYMBOL,\n  makeOptions,\n  sym,\n  privateSet,\n  cloneElement,\n  spyMethod,\n  isEmptyValue,\n  loadCheerioRoot,\n} from './Utils';\nimport getAdapter from './getAdapter';\nimport { debugNodes } from './Debug';\nimport {\n  propsOfNode,\n  getTextFromNode,\n  hasClassName,\n  childrenOfNode,\n  parentsOfNode,\n  treeFilter,\n} from './RSTTraversal';\nimport { buildPredicate, reduceTreesBySelector } from './selectors';\n\nconst NODE = sym('__node__');\nconst NODES = sym('__nodes__');\nconst RENDERER = sym('__renderer__');\nconst UNRENDERED = sym('__unrendered__');\nconst ROOT = sym('__root__');\nconst OPTIONS = sym('__options__');\nconst SET_STATE = sym('__setState__');\nconst ROOT_NODES = sym('__rootNodes__');\nconst CHILD_CONTEXT = sym('__childContext__');\nconst WRAPPING_COMPONENT = sym('__wrappingComponent__');\nconst PRIMARY_WRAPPER = sym('__primaryWrapper__');\nconst ROOT_FINDER = sym('__rootFinder__');\nconst PROVIDER_VALUES = sym('__providerValues__');\n\n/**\n * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n * function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @param {Function} filter\n * @returns {ShallowWrapper}\n */\nfunction findWhereUnwrapped(wrapper, predicate, filter = treeFilter) {\n  return wrapper.flatMap((n) => filter(n.getNodeInternal(), predicate));\n}\n\n/**\n * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n * the provided predicate function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @returns {ShallowWrapper}\n */\nfunction filterWhereUnwrapped(wrapper, predicate) {\n  return wrapper.wrap(wrapper.getNodesInternal().filter(predicate).filter(Boolean));\n}\n\n/**\n * Ensure options passed to ShallowWrapper are valid. Throws otherwise.\n * @param {Object} options\n */\nfunction validateOptions(options) {\n  const {\n    lifecycleExperimental,\n    disableLifecycleMethods,\n    enableComponentDidUpdateOnSetState,\n    supportPrevContextArgumentOfComponentDidUpdate,\n    lifecycles,\n  } = options;\n  if (typeof lifecycleExperimental !== 'undefined' && typeof lifecycleExperimental !== 'boolean') {\n    throw new Error('lifecycleExperimental must be either true or false if provided');\n  }\n\n  if (typeof disableLifecycleMethods !== 'undefined' && typeof disableLifecycleMethods !== 'boolean') {\n    throw new Error('disableLifecycleMethods must be either true or false if provided');\n  }\n\n  if (\n    lifecycleExperimental != null\n    && disableLifecycleMethods != null\n    && lifecycleExperimental === disableLifecycleMethods\n  ) {\n    throw new Error('lifecycleExperimental and disableLifecycleMethods cannot be set to the same value');\n  }\n\n  if (\n    typeof enableComponentDidUpdateOnSetState !== 'undefined'\n    && lifecycles.componentDidUpdate\n    && lifecycles.componentDidUpdate.onSetState !== enableComponentDidUpdateOnSetState\n  ) {\n    throw new TypeError('the legacy enableComponentDidUpdateOnSetState option should be matched by `lifecycles: { componentDidUpdate: { onSetState: true } }`, for compatibility');\n  }\n\n  if (\n    typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined'\n    && lifecycles.componentDidUpdate\n    && lifecycles.componentDidUpdate.prevContext !== supportPrevContextArgumentOfComponentDidUpdate\n  ) {\n    throw new TypeError('the legacy supportPrevContextArgumentOfComponentDidUpdate option should be matched by `lifecycles: { componentDidUpdate: { prevContext: true } }`, for compatibility');\n  }\n}\n\nfunction getAdapterLifecycles({ options }) {\n  const {\n    lifecycles = {},\n    enableComponentDidUpdateOnSetState,\n    supportPrevContextArgumentOfComponentDidUpdate,\n  } = options;\n\n  const hasLegacySetStateArg = typeof enableComponentDidUpdateOnSetState !== 'undefined';\n  const hasLegacyPrevContextArg = typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined';\n  const componentDidUpdate = hasLegacySetStateArg || hasLegacyPrevContextArg\n    ? {\n      ...(hasLegacySetStateArg && {\n        onSetState: !!enableComponentDidUpdateOnSetState,\n      }),\n      ...(hasLegacyPrevContextArg && {\n        prevContext: !!supportPrevContextArgumentOfComponentDidUpdate,\n      }),\n    }\n    : null;\n  const { getDerivedStateFromProps: originalGDSFP } = lifecycles;\n  const getDerivedStateFromProps = originalGDSFP ? {\n    hasShouldComponentUpdateBug: !!originalGDSFP.hasShouldComponentUpdateBug,\n  } : false;\n\n  return {\n    ...lifecycles,\n    setState: {\n      ...lifecycles.setState,\n    },\n    getChildContext: {\n      calledByRenderer: true,\n      ...lifecycles.getChildContext,\n    },\n    ...(componentDidUpdate && { componentDidUpdate }),\n    getDerivedStateFromProps,\n  };\n}\n\nfunction getRootNode(node) {\n  if (node.nodeType === 'host') {\n    return node;\n  }\n  return node.rendered;\n}\n\nfunction getRootNodeInternal(wrapper) {\n  if (wrapper[ROOT].length !== 1) {\n    throw new Error('getRootNodeInternal(wrapper) can only be called when wrapper wraps one node');\n  }\n  if (wrapper[ROOT] !== wrapper) {\n    return wrapper[ROOT_NODES][0];\n  }\n  return wrapper[ROOT][NODE];\n}\n\nfunction nodeParents(wrapper, node) {\n  return parentsOfNode(node, getRootNodeInternal(wrapper));\n}\n\nfunction privateSetNodes(wrapper, nodes) {\n  if (!Array.isArray(nodes)) {\n    privateSet(wrapper, NODE, nodes);\n    privateSet(wrapper, NODES, [nodes]);\n  } else {\n    privateSet(wrapper, NODE, nodes[0]);\n    privateSet(wrapper, NODES, nodes);\n  }\n  privateSet(wrapper, 'length', wrapper[NODES].length);\n}\n\nfunction pureComponentShouldComponentUpdate(prevProps, props, prevState, state) {\n  return !shallowEqual(prevProps, props) || !shallowEqual(prevState, state);\n}\n\nfunction isPureComponent(instance) {\n  return instance && instance.isPureReactComponent;\n}\n\nfunction getChildContext(node, hierarchy, renderer) {\n  const { instance, type: Component } = node;\n  const componentName = displayNameOfNode(node);\n  // Warn like react if childContextTypes is not defined:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L639-L646\n  if (typeof Component.childContextTypes !== 'object') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `${componentName}.getChildContext(): childContextTypes must be defined in order to use getChildContext().`,\n    );\n    return {};\n  }\n  // Check childContextTypes like react:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L630-L637\n  const childContext = instance.getChildContext();\n  Object.keys(childContext).forEach((key) => {\n    if (!(key in Component.childContextTypes)) {\n      throw new Error(\n        `${componentName}.getChildContext(): key \"${key}\" is not defined in childContextTypes.`,\n      );\n    }\n  });\n  if (typeof renderer.checkPropTypes === 'function') {\n    renderer.checkPropTypes(Component.childContextTypes, childContext, 'child context', hierarchy);\n  }\n  return childContext;\n}\n\nfunction spyOnGetChildContextInitialRender(nodes, adapter) {\n  if (\n    !isCustomComponentElement(nodes, adapter)\n    || !nodes.type.prototype\n    || typeof nodes.type.prototype.getChildContext !== 'function'\n  ) {\n    return null;\n  }\n\n  return spyMethod(nodes.type.prototype, 'getChildContext');\n}\n\nfunction privateSetChildContext(adapter, wrapper, instance, renderedNode, getChildContextSpy) {\n  const renderer = wrapper[RENDERER];\n  // We only support parent-based context.\n  if (adapter.options.legacyContextMode !== 'parent') { return; }\n  if (getChildContextSpy) {\n    privateSet(wrapper, CHILD_CONTEXT, getChildContextSpy.getLastReturnValue());\n    getChildContextSpy.restore();\n  } else if (typeof instance.getChildContext === 'function') {\n    // If there's no spy but getChildContext is a function, that means our renderer\n    // is not going to call it for us, so we need to call it ourselves.\n    const nodeHierarchy = [wrapper[NODE]].concat(nodeParents(wrapper, wrapper[NODE]));\n    const childContext = getChildContext(renderedNode, nodeHierarchy, renderer);\n    privateSet(wrapper, CHILD_CONTEXT, childContext);\n  } else {\n    privateSet(wrapper, CHILD_CONTEXT, null);\n  }\n}\n\nfunction mockSCUIfgDSFPReturnNonNull(node, state) {\n  const { getDerivedStateFromProps } = node.type;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    // we try to fix a React shallow renderer bug here.\n    // (facebook/react#14607, which has been fixed in react 16.8):\n    // when gDSFP return derived state, it will set instance state in shallow renderer before SCU,\n    // this will cause `this.state` in sCU be the updated state, which is wrong behavior.\n    // so we have to wrap sCU to pass the old state to original sCU.\n    const { instance } = node;\n    const { restore } = spyMethod(\n      instance,\n      'shouldComponentUpdate',\n      (originalSCU) => function shouldComponentUpdate(...args) {\n        instance.state = state;\n        const sCUResult = originalSCU.apply(instance, args);\n        const [, nextState] = args;\n        instance.state = nextState;\n        restore();\n        return sCUResult;\n      },\n    );\n  }\n}\n\n/**\n * Recursively dive()s every custom component in a wrapper until\n * the target component is found.\n *\n * @param {ShallowWrapper} wrapper A ShallowWrapper to search\n * @param {ComponentType} target A react custom component that, when found, will end recursion\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {ShallowWrapper|undefined} A ShallowWrapper for the target, or\n *  undefined if it can't be found\n */\nfunction deepRender(wrapper, target, adapter) {\n  const node = wrapper[NODE];\n  const element = node && adapter.nodeToElement(node);\n  if (wrapper.type() === target) {\n    return wrapper.dive();\n  }\n  if (element && isCustomComponentElement(element, adapter)) {\n    return deepRender(wrapper.dive(), target, adapter);\n  }\n  const children = wrapper.children();\n  for (let i = 0; i < children.length; i += 1) {\n    const found = deepRender(children.at(i), target, adapter);\n    if (typeof found !== 'undefined') {\n      return found;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Deep-renders the `wrappingComponent` and returns the context that should\n * be accessible to the primary wrapper.\n *\n * @param {WrappingComponentWrapper} wrapper The `WrappingComponentWrapper` for a\n *  `wrappingComponent`\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {object} An object containing an object of legacy context values and a Map of\n *  `createContext()` Provider values.\n */\nfunction getContextFromWrappingComponent(wrapper, adapter) {\n  const rootFinder = deepRender(wrapper, wrapper[ROOT_FINDER], adapter);\n  if (!rootFinder) {\n    throw new Error('`wrappingComponent` must render its children!');\n  }\n  return {\n    legacyContext: rootFinder[OPTIONS].context,\n    providerValues: rootFinder[PROVIDER_VALUES],\n  };\n}\n\n/**\n * Makes options specifically for `ShallowWrapper`. Most of the logic here is around rendering\n * a `wrappingComponent` (if one was provided) and adding the child context of that component\n * to `options.context`.\n *\n * @param {ReactElement} nodes the nodes passed to `ShallowWrapper`\n * @param {ShallowWrapper} root this `ShallowWrapper`'s parent. If this is passed, options are\n *  not transformed.\n * @param {*} passedOptions the options passed to `ShallowWrapper`.\n * @param {*} wrapper the `ShallowWrapper` itself\n * @returns {Object} the decorated and transformed options\n */\nfunction makeShallowOptions(nodes, root, passedOptions, wrapper) {\n  const options = makeOptions(passedOptions);\n  const adapter = getAdapter(passedOptions);\n  privateSet(options, PROVIDER_VALUES, passedOptions[PROVIDER_VALUES]);\n  if (root || !isCustomComponent(options.wrappingComponent, adapter)) {\n    return options;\n  }\n  if (typeof adapter.wrapWithWrappingComponent !== 'function') {\n    throw new TypeError('your adapter does not support `wrappingComponent`. Try upgrading it!');\n  }\n  const { node: wrappedNode, RootFinder } = adapter.wrapWithWrappingComponent(nodes, options);\n  // eslint-disable-next-line no-use-before-define\n  const wrappingComponent = new WrappingComponentWrapper(wrappedNode, wrapper, RootFinder);\n  const {\n    legacyContext: wrappingComponentLegacyContext,\n    providerValues: wrappingComponentProviderValues,\n  } = getContextFromWrappingComponent(wrappingComponent, adapter);\n  privateSet(wrapper, WRAPPING_COMPONENT, wrappingComponent);\n  return {\n    ...options,\n    context: {\n      ...options.context,\n      ...wrappingComponentLegacyContext,\n    },\n    [PROVIDER_VALUES]: wrappingComponentProviderValues,\n  };\n}\n\n\nfunction makeInheritedChildOptions(wrapper, options = {}) {\n  const childOptions = {\n    ...wrapper[OPTIONS],\n    ...options,\n    context: options.context || {\n      ...wrapper[OPTIONS].context,\n      ...wrapper[ROOT][CHILD_CONTEXT],\n    },\n  };\n  privateSet(childOptions, PROVIDER_VALUES, wrapper[ROOT][PROVIDER_VALUES]);\n  return childOptions;\n}\n\n\n/**\n * @class ShallowWrapper\n */\nclass ShallowWrapper {\n  constructor(nodes, root, passedOptions = {}) {\n    validateOptions(passedOptions);\n\n    const options = makeShallowOptions(nodes, root, passedOptions, this);\n    const adapter = getAdapter(options);\n    const lifecycles = getAdapterLifecycles(adapter);\n\n    // mounting a ShallowRender component\n    if (!root) {\n      if (!adapter.isValidElement(nodes)) {\n        throw new TypeError('ShallowWrapper can only wrap valid elements');\n      }\n\n      const getChildContextSpy = lifecycles.getChildContext.calledByRenderer\n        ? spyOnGetChildContextInitialRender(nodes, adapter)\n        : null;\n      privateSet(this, ROOT, this);\n      privateSet(this, UNRENDERED, nodes);\n      const renderer = adapter.createRenderer({ mode: 'shallow', ...options });\n      privateSet(this, RENDERER, renderer);\n      const providerValues = new Map(options[PROVIDER_VALUES] || []);\n      this[RENDERER].render(nodes, options.context, { providerValues });\n      const renderedNode = this[RENDERER].getNode();\n      privateSetNodes(this, getRootNode(renderedNode));\n      privateSet(this, OPTIONS, options);\n      privateSet(this, PROVIDER_VALUES, providerValues);\n\n      const { instance } = renderedNode;\n      if (instance && !options.disableLifecycleMethods) {\n        // Ensure to call componentDidUpdate when instance.setState is called\n        if (lifecycles.componentDidUpdate.onSetState && !instance[SET_STATE]) {\n          privateSet(instance, SET_STATE, instance.setState);\n          instance.setState = (updater, callback = undefined) => this.setState(\n            ...(callback == null ? [updater] : [updater, callback]),\n          );\n        }\n\n        if (typeof instance.componentDidMount === 'function') {\n          this[RENDERER].batchedUpdates(() => {\n            instance.componentDidMount();\n          });\n        }\n        privateSetChildContext(adapter, this, instance, renderedNode, getChildContextSpy);\n      }\n    // creating a child component through enzyme's ShallowWrapper APIs.\n    } else {\n      privateSet(this, ROOT, root);\n      privateSet(this, UNRENDERED, null);\n      privateSet(this, RENDERER, root[RENDERER]);\n      privateSetNodes(this, nodes);\n      privateSet(this, OPTIONS, root[OPTIONS]);\n      privateSet(this, ROOT_NODES, root[NODES]);\n      privateSet(this, PROVIDER_VALUES, null);\n    }\n  }\n\n  /**\n   * Returns the root wrapper\n   *\n   * @return {ShallowWrapper}\n   */\n  root() {\n    return this[ROOT];\n  }\n\n  /**\n   * Returns the wrapped component.\n   *\n   * @return {ReactComponent}\n   */\n  getNodeInternal() {\n    if (this.length !== 1) {\n      throw new Error('ShallowWrapper::getNode() can only be called when wrapping one node');\n    }\n    if (this[ROOT] === this) {\n      this.update();\n    }\n    return this[NODE];\n  }\n\n  /**\n   * Returns the the wrapped components.\n   *\n   * @return {Array<ReactComponent>}\n   */\n  getNodesInternal() {\n    if (this[ROOT] === this && this.length === 1) {\n      this.update();\n    }\n    return this[NODES];\n  }\n\n  /**\n   * Returns the wrapped ReactElement.\n   *\n   * @return {ReactElement}\n   */\n  getElement() {\n    return this.single('getElement', (n) => getAdapter(this[OPTIONS]).nodeToElement(n));\n  }\n\n  /**\n   * Returns the wrapped ReactElements.\n   *\n   * @return {Array<ReactElement>}\n   */\n  getElements() {\n    return this.getNodesInternal().map((n) => getAdapter(this[OPTIONS]).nodeToElement(n));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getNode() {\n    throw new Error('ShallowWrapper::getNode() is no longer supported. Use ShallowWrapper::getElement() instead');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getNodes() {\n    throw new Error('ShallowWrapper::getNodes() is no longer supported. Use ShallowWrapper::getElements() instead');\n  }\n\n  /**\n   * Gets the instance of the component being rendered as the root node passed into `shallow()`.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * const inst = wrapper.instance();\n   * expect(inst).to.be.instanceOf(MyComponent);\n   * ```\n   * @returns {ReactComponent}\n   */\n  instance() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::instance() can only be called on the root');\n    }\n    return this[RENDERER].getNode().instance;\n  }\n\n  /**\n   * If a `wrappingComponent` was passed in `options`, this methods returns a `ShallowWrapper`\n   * around the rendered `wrappingComponent`. This `ShallowWrapper` can be used to update the\n   * `wrappingComponent`'s props, state, etc.\n   *\n   * @returns ShallowWrapper\n   */\n  getWrappingComponent() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n    }\n    if (!this[OPTIONS].wrappingComponent) {\n      throw new Error('ShallowWrapper::getWrappingComponent() can only be called on a wrapper that was originally passed a `wrappingComponent` option');\n    }\n    return this[WRAPPING_COMPONENT];\n  }\n\n  /**\n   * Forces a re-render. Useful to run before checking the render output if something external\n   * may be updating the state of the component somewhere.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @returns {ShallowWrapper}\n   */\n  update() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::update() can only be called on the root');\n    }\n    if (this.length !== 1) {\n      throw new Error('ShallowWrapper::update() can only be called when wrapping one node');\n    }\n    privateSetNodes(this, getRootNode(this[RENDERER].getNode()));\n    return this;\n  }\n\n  /**\n   * A method that unmounts the component. This can be used to simulate a component going through\n   * and unmount/mount lifecycle.\n   * @returns {ShallowWrapper}\n   */\n  unmount() {\n    this[RENDERER].unmount();\n    if (this[ROOT][WRAPPING_COMPONENT]) {\n      this[ROOT][WRAPPING_COMPONENT].unmount();\n    }\n    return this;\n  }\n\n  /**\n   * A method is for re-render with new props and context.\n   * This calls componentDidUpdate method if disableLifecycleMethods is not enabled.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} props\n   * @param {Object} context\n   * @returns {ShallowWrapper}\n   */\n  rerender(props, context) {\n    const adapter = getAdapter(this[OPTIONS]);\n    this.single('rerender', () => {\n      withSetStateAllowed(() => {\n        // NOTE(lmr): In react 16, instances will be null for SFCs, but\n        // rerendering with props/context is still a valid thing to do. In\n        // this case, state will be undefined, but props/context will exist.\n        const node = this[RENDERER].getNode();\n        const instance = node.instance || {};\n        const type = node.type || {};\n        const { state } = instance;\n        const prevProps = instance.props || this[UNRENDERED].props;\n        const prevContext = instance.context || this[OPTIONS].context;\n        const nextContext = context || prevContext;\n        if (context) {\n          this[OPTIONS] = { ...this[OPTIONS], context: nextContext };\n        }\n        this[RENDERER].batchedUpdates(() => {\n          // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n          // so we spy shouldComponentUpdate to get the result.\n          const lifecycles = getAdapterLifecycles(adapter);\n          let shouldRender = true;\n          let shouldComponentUpdateSpy;\n          let getChildContextSpy;\n          if (\n            !this[OPTIONS].disableLifecycleMethods\n            && instance\n          ) {\n            if (typeof instance.shouldComponentUpdate === 'function') {\n              const { getDerivedStateFromProps: gDSFP } = lifecycles;\n              if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n                mockSCUIfgDSFPReturnNonNull(node, state);\n              }\n              shouldComponentUpdateSpy = spyMethod(instance, 'shouldComponentUpdate');\n            }\n            if (\n              lifecycles.getChildContext.calledByRenderer\n              && typeof instance.getChildContext === 'function'\n            ) {\n              getChildContextSpy = spyMethod(instance, 'getChildContext');\n            }\n          }\n          if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n            shouldRender = pureComponentShouldComponentUpdate(\n              prevProps,\n              props,\n              state,\n              instance.state,\n            );\n          }\n          if (props) this[UNRENDERED] = cloneElement(adapter, this[UNRENDERED], props);\n          this[RENDERER].render(this[UNRENDERED], nextContext, {\n            providerValues: this[PROVIDER_VALUES],\n          });\n          if (shouldComponentUpdateSpy) {\n            shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n            shouldComponentUpdateSpy.restore();\n          }\n          if (\n            shouldRender\n            && !this[OPTIONS].disableLifecycleMethods\n            && instance\n          ) {\n            privateSetChildContext(adapter, this, instance, node, getChildContextSpy);\n            if (lifecycles.getSnapshotBeforeUpdate) {\n              let snapshot;\n              if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n                snapshot = instance.getSnapshotBeforeUpdate(prevProps, state);\n              }\n              if (\n                lifecycles.componentDidUpdate\n                && typeof instance.componentDidUpdate === 'function'\n                && (\n                  !state\n                  || shallowEqual(state, this.instance().state)\n                  || typeof type.getDerivedStateFromProps === 'function'\n                )\n              ) {\n                instance.componentDidUpdate(prevProps, state, snapshot);\n              }\n            } else if (\n              lifecycles.componentDidUpdate\n              && typeof instance.componentDidUpdate === 'function'\n            ) {\n              if (lifecycles.componentDidUpdate.prevContext) {\n                instance.componentDidUpdate(prevProps, state, prevContext);\n              } else if (!state || shallowEqual(this.instance().state, state)) {\n                instance.componentDidUpdate(prevProps, state);\n              }\n            }\n          // If it doesn't need to rerender, update only its props.\n          } else if (!shallowEqual(props, instance.props)) {\n            instance.props = (Object.freeze || Object)({ ...instance.props, ...props });\n          }\n          this.update();\n        });\n      });\n    });\n    return this;\n  }\n\n  /**\n   * A method that sets the props of the root component, and re-renders. Useful for when you are\n   * wanting to test how the component behaves over time with changing props. Calling this, for\n   * instance, will call the `componentWillReceiveProps` lifecycle method.\n   *\n   * Similar to `setState`, this method accepts a props object and will merge it in with the already\n   * existing props.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} props object\n   * @param {Function} cb - callback function\n   * @returns {ShallowWrapper}\n   */\n  setProps(props, callback = undefined) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setProps() can only be called on the root');\n    }\n    if (arguments.length > 1 && typeof callback !== 'function') {\n      throw new TypeError('ReactWrapper::setProps() expects a function as its second argument');\n    }\n    this.rerender(props);\n    if (callback) {\n      callback();\n    }\n    return this;\n  }\n\n  /**\n   * A method to invoke `setState` on the root component instance similar to how you might in the\n   * definition of the component, and re-renders.  This method is useful for testing your component\n   * in hard to achieve states, however should be used sparingly. If possible, you should utilize\n   * your component's external API in order to get it into whatever state you want to test, in order\n   * to be as accurate of a test as possible. This is not always practical, however.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} state to merge\n   * @param {Function} cb - callback function\n   * @returns {ShallowWrapper}\n   */\n  setState(state, callback = undefined) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setState() can only be called on the root');\n    }\n    if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n      throw new Error('ShallowWrapper::setState() can only be called on class components');\n    }\n    if (arguments.length > 1 && typeof callback !== 'function') {\n      throw new TypeError('ReactWrapper::setState() expects a function as its second argument');\n    }\n\n    this.single('setState', () => {\n      withSetStateAllowed(() => {\n        const adapter = getAdapter(this[OPTIONS]);\n\n        const lifecycles = getAdapterLifecycles(adapter);\n\n        const node = this[RENDERER].getNode();\n        const { instance } = node;\n        const prevProps = instance.props;\n        const prevState = instance.state;\n        const prevContext = instance.context;\n\n        const statePayload = typeof state === 'function'\n          ? state.call(instance, prevState, prevProps)\n          : state;\n\n        // returning null or undefined prevents the update in React 16+\n        // https://github.com/facebook/react/pull/12756\n        const maybeHasUpdate = !lifecycles.setState.skipsComponentDidUpdateOnNullish\n          || statePayload != null;\n\n        // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n        // so we spy shouldComponentUpdate to get the result.\n        let shouldComponentUpdateSpy;\n        let getChildContextSpy;\n        let shouldRender = true;\n        if (\n          !this[OPTIONS].disableLifecycleMethods\n          && instance\n        ) {\n          if (\n            lifecycles.componentDidUpdate\n            && lifecycles.componentDidUpdate.onSetState\n            && typeof instance.shouldComponentUpdate === 'function'\n          ) {\n            const { getDerivedStateFromProps: gDSFP } = lifecycles;\n            if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n              mockSCUIfgDSFPReturnNonNull(node, state);\n            }\n            shouldComponentUpdateSpy = spyMethod(instance, 'shouldComponentUpdate');\n          }\n          if (\n            lifecycles.getChildContext.calledByRenderer\n            && typeof instance.getChildContext === 'function'\n          ) {\n            getChildContextSpy = spyMethod(instance, 'getChildContext');\n          }\n        }\n        if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n          shouldRender = pureComponentShouldComponentUpdate(\n            prevProps,\n            instance.props,\n            prevState,\n            { ...prevState, ...statePayload },\n          );\n        }\n\n        // We don't pass the setState callback here\n        // to guarantee to call the callback after finishing the render\n        if (instance[SET_STATE]) {\n          instance[SET_STATE](statePayload);\n        } else {\n          instance.setState(statePayload);\n        }\n        if (shouldComponentUpdateSpy) {\n          shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n          shouldComponentUpdateSpy.restore();\n        }\n        if (\n          maybeHasUpdate\n          && shouldRender\n          && !this[OPTIONS].disableLifecycleMethods\n        ) {\n          privateSetChildContext(adapter, this, instance, node, getChildContextSpy);\n          if (\n            lifecycles.componentDidUpdate\n            && lifecycles.componentDidUpdate.onSetState\n          ) {\n            if (\n              lifecycles.getSnapshotBeforeUpdate\n              && typeof instance.getSnapshotBeforeUpdate === 'function'\n            ) {\n              const snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);\n              if (typeof instance.componentDidUpdate === 'function') {\n                instance.componentDidUpdate(prevProps, prevState, snapshot);\n              }\n            } else if (typeof instance.componentDidUpdate === 'function') {\n              if (lifecycles.componentDidUpdate.prevContext) {\n                instance.componentDidUpdate(prevProps, prevState, prevContext);\n              } else {\n                instance.componentDidUpdate(prevProps, prevState);\n              }\n            }\n          }\n        }\n        this.update();\n        // call the setState callback\n        if (callback) {\n          if (adapter.invokeSetStateCallback) {\n            adapter.invokeSetStateCallback(instance, callback);\n          } else {\n            callback.call(instance);\n          }\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * A method that sets the context of the root component, and re-renders. Useful for when you are\n   * wanting to test how the component behaves over time with changing contexts.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} context object\n   * @returns {ShallowWrapper}\n   */\n  setContext(context) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setContext() can only be called on the root');\n    }\n    if (!this[OPTIONS].context) {\n      throw new Error('ShallowWrapper::setContext() can only be called on a wrapper that was originally passed a context option');\n    }\n    return this.rerender(null, context);\n  }\n\n  /**\n   * Whether or not a given react element exists in the shallow render tree.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement|Array<ReactElement>} nodeOrNodes\n   * @returns {Boolean}\n   */\n  contains(nodeOrNodes) {\n    const adapter = getAdapter(this[OPTIONS]);\n    if (!isReactElementAlike(nodeOrNodes, adapter)) {\n      throw new Error('ShallowWrapper::contains() can only be called with a ReactElement (or an array of them), a string, or a number as an argument.');\n    }\n    const predicate = Array.isArray(nodeOrNodes)\n      ? (other) => containsChildrenSubArray(\n        nodeEqual,\n        other,\n        nodeOrNodes.map((node) => adapter.elementToNode(node)),\n      )\n      : (other) => nodeEqual(adapter.elementToNode(nodeOrNodes), other);\n\n    return findWhereUnwrapped(this, predicate).length > 0;\n  }\n\n  /**\n   * Whether or not a given react element exists in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * // MyComponent outputs <div><div class=\"foo\">Hello</div></div>\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsMatchingElement(<div>Hello</div>)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  containsMatchingElement(node) {\n    const adapter = getAdapter(this[OPTIONS]);\n    const rstNode = adapter.elementToNode(node);\n    const predicate = (other) => nodeMatches(rstNode, other, (a, b) => a <= b);\n    return findWhereUnwrapped(this, predicate).length > 0;\n  }\n\n  /**\n   * Whether or not all the given react elements exist in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsAllMatchingElements([\n   *   <div>Hello</div>,\n   *   <div>Goodbye</div>,\n   * ])).to.equal(true);\n   * ```\n   *\n   * @param {Array<ReactElement>} nodes\n   * @returns {Boolean}\n   */\n  containsAllMatchingElements(nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('nodes should be an Array');\n    }\n\n    return nodes.every((node) => this.containsMatchingElement(node));\n  }\n\n  /**\n   * Whether or not one of the given react elements exists in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsAnyMatchingElements([\n   *   <div>Hello</div>,\n   *   <div>Goodbye</div>,\n   * ])).to.equal(true);\n   * ```\n   *\n   * @param {Array<ReactElement>} nodes\n   * @returns {Boolean}\n   */\n  containsAnyMatchingElements(nodes) {\n    return Array.isArray(nodes) && nodes.some((node) => this.containsMatchingElement(node));\n  }\n\n  /**\n   * Whether or not a given react element exists in the render tree.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  equals(node) {\n    return this.single('equals', () => nodeEqual(this.getNodeInternal(), node));\n  }\n\n  /**\n   * Whether or not a given react element matches the render tree.\n   * Match is based on the expected element and not on wrapper root node.\n   * It will determine if the wrapper root node \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrapper root node and equals to each other.\n   *\n   * Example:\n   * ```\n   * // MyComponent outputs <div class=\"foo\">Hello</div>\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.matchesElement(<div>Hello</div>)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  matchesElement(node) {\n    return this.single('matchesElement', () => {\n      const adapter = getAdapter(this[OPTIONS]);\n      const rstNode = adapter.elementToNode(node);\n      return nodeMatches(rstNode, this.getNodeInternal(), (a, b) => a <= b);\n    });\n  }\n\n  /**\n   * Finds every node in the render tree of the current wrapper that matches the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  find(selector) {\n    return this.wrap(reduceTreesBySelector(selector, this.getNodesInternal()));\n  }\n\n  /**\n   * Returns whether or not current node matches a provided selector.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {boolean}\n   */\n  is(selector) {\n    const predicate = buildPredicate(selector);\n    return this.single('is', (n) => predicate(n));\n  }\n\n  /**\n   * Returns true if the component rendered nothing, i.e., null or false.\n   *\n   * @returns {boolean}\n   */\n  isEmptyRender() {\n    const nodes = this.getNodesInternal();\n\n    return nodes.every((n) => isEmptyValue(n));\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n   * the provided predicate function. The predicate should receive a wrapped node as its first\n   * argument.\n   *\n   * @param {Function} predicate\n   * @returns {ShallowWrapper}\n   */\n  filterWhere(predicate) {\n    return filterWhereUnwrapped(this, (n) => predicate(this.wrap(n)));\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n   * the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  filter(selector) {\n    const predicate = buildPredicate(selector);\n    return filterWhereUnwrapped(this, predicate);\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper that did not match\n   * the provided selector. Essentially the inverse of `filter`.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  not(selector) {\n    const predicate = buildPredicate(selector);\n    return filterWhereUnwrapped(this, (n) => !predicate(n));\n  }\n\n  /**\n   * Returns a string of the rendered text of the current render tree.  This function should be\n   * looked at with skepticism if being used to test what the actual HTML output of the component\n   * will be. If that is what you would like to test, use enzyme's `render` function instead.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {String}\n   */\n  text() {\n    return this.single('text', getTextFromNode);\n  }\n\n  /**\n   * Returns the HTML of the node.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {String}\n   */\n  html() {\n    return this.single('html', (n) => {\n      if (this.type() === null) return null;\n      const adapter = getAdapter(this[OPTIONS]);\n      const renderer = adapter.createRenderer({ ...this[OPTIONS], mode: 'string' });\n      return renderer.render(adapter.nodeToElement(n));\n    });\n  }\n\n  /**\n   * Returns the current node rendered to HTML and wrapped in a CheerioWrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {CheerioWrapper}\n   */\n  render() {\n    const html = this.html();\n    return loadCheerioRoot(html);\n  }\n\n  /**\n   * Used to simulate events. Pass an eventname and (optionally) event arguments. This method of\n   * testing events should be met with some skepticism.\n   *\n   * @param {String} event\n   * @param {Array} args\n   * @returns {ShallowWrapper}\n   */\n  simulate(event, ...args) {\n    return this.single('simulate', (n) => {\n      this[RENDERER].simulateEvent(n, event, ...args);\n      this[ROOT].update();\n      return this;\n    });\n  }\n\n  /**\n   * Used to simulate throwing a rendering error. Pass an error to throw.\n   *\n   * @param {String} error\n   * @returns {ShallowWrapper}\n   */\n  simulateError(error) {\n    // in shallow, the \"root\" is the \"rendered\" thing.\n\n    return this.single('simulateError', (thisNode) => {\n      if (thisNode.nodeType === 'host') {\n        throw new TypeError('ShallowWrapper::simulateError() can only be called on custom components');\n      }\n\n      const renderer = this[RENDERER];\n      if (typeof renderer.simulateError !== 'function') {\n        throw new TypeError('your adapter does not support `simulateError`. Try upgrading it!');\n      }\n\n      const rootNode = getRootNodeInternal(this);\n      const nodeHierarchy = [thisNode].concat(nodeParents(this, thisNode));\n      renderer.simulateError(nodeHierarchy, rootNode, error);\n\n      return this;\n    });\n  }\n\n  /**\n   * Returns the props hash for the current node of the wrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {Object}\n   */\n  props() {\n    return this.single('props', propsOfNode);\n  }\n\n  /**\n   * Returns the state hash for the root node of the wrapper. Optionally pass in a prop name and it\n   * will return just that value.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {String} name (optional)\n   * @returns {*}\n   */\n  state(name) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::state() can only be called on the root');\n    }\n    if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n      throw new Error('ShallowWrapper::state() can only be called on class components');\n    }\n    const _state = this.single('state', () => this.instance().state);\n    if (typeof name !== 'undefined') {\n      if (_state == null) {\n        throw new TypeError(`ShallowWrapper::state(\"${name}\") requires that \\`state\\` not be \\`null\\` or \\`undefined\\``);\n      }\n      return _state[name];\n    }\n    return _state;\n  }\n\n  /**\n   * Returns the context hash for the root node of the wrapper.\n   * Optionally pass in a prop name and it will return just that value.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {String} name (optional)\n   * @returns {*}\n   */\n  context(name) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::context() can only be called on the root');\n    }\n    if (!this[OPTIONS].context) {\n      throw new Error('ShallowWrapper::context() can only be called on a wrapper that was originally passed a context option');\n    }\n    if (this.instance() === null) {\n      throw new Error('ShallowWrapper::context() can only be called on wrapped nodes that have a non-null instance');\n    }\n    const _context = this.single('context', () => this.instance().context);\n    if (name) {\n      return _context[name];\n    }\n    return _context;\n  }\n\n  /**\n   * Returns a new wrapper with all of the children of the current wrapper.\n   *\n   * @param {EnzymeSelector} [selector]\n   * @returns {ShallowWrapper}\n   */\n  children(selector) {\n    const allChildren = this.flatMap((n) => childrenOfNode(n.getNodeInternal()));\n    return selector ? allChildren.filter(selector) : allChildren;\n  }\n\n  /**\n   * Returns a new wrapper with a specific child\n   *\n   * @param {Number} [index]\n   * @returns {ShallowWrapper}\n   */\n  childAt(index) {\n    return this.single('childAt', () => this.children().at(index));\n  }\n\n  /**\n   * Returns a wrapper around all of the parents/ancestors of the wrapper. Does not include the node\n   * in the current wrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {EnzymeSelector} [selector]\n   * @returns {ShallowWrapper}\n   */\n  parents(selector) {\n    return this.single('parents', (n) => {\n      const allParents = this.wrap(nodeParents(this, n));\n      return selector ? allParents.filter(selector) : allParents;\n    });\n  }\n\n  /**\n   * Returns a wrapper around the immediate parent of the current node.\n   *\n   * @returns {ShallowWrapper}\n   */\n  parent() {\n    return this.flatMap((n) => [n.parents().get(0)]);\n  }\n\n  /**\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  closest(selector) {\n    if (this.is(selector)) {\n      return this;\n    }\n    const matchingAncestors = this.parents().filter(selector);\n    return matchingAncestors.length > 0 ? matchingAncestors.first() : this.findWhere(() => false);\n  }\n\n  /**\n   * Shallow renders the current node and returns a shallow wrapper around it.\n   *\n   * NOTE: can only be called on wrapper of a single node.\n   *\n   * @param {Object} options\n   * @returns {ShallowWrapper}\n   */\n  shallow(options = {}) {\n    return this.single('shallow', (n) => {\n      const childOptions = makeInheritedChildOptions(this, options);\n      return this.wrap(getAdapter(this[OPTIONS]).nodeToElement(n), null, childOptions);\n    });\n  }\n\n  /**\n   * Returns the value of prop with the given name of the current node.\n   *\n   * @param propName\n   * @returns {*}\n   */\n  prop(propName) {\n    return this.props()[propName];\n  }\n\n  /**\n   * Used to invoke a function prop.\n   * Will invoke an function prop and return its value.\n   *\n   * @param {String} propName\n   * @returns {Any}\n   */\n  invoke(propName) {\n    return this.single('invoke', () => {\n      const handler = this.prop(propName);\n      if (typeof handler !== 'function') {\n        throw new TypeError('ShallowWrapper::invoke() requires the name of a prop whose value is a function');\n      }\n      return (...args) => {\n        const response = handler(...args);\n        this[ROOT].update();\n        return response;\n      };\n    });\n  }\n\n  /**\n   * Returns a wrapper of the node rendered by the provided render prop.\n   *\n   * @param {String} propName\n   * @returns {Function}\n   */\n  renderProp(propName) {\n    const adapter = getAdapter(this[OPTIONS]);\n    if (typeof adapter.wrap !== 'function') {\n      throw new RangeError('your adapter does not support `wrap`. Try upgrading it!');\n    }\n\n    return this.single('renderProp', (n) => {\n      if (n.nodeType === 'host') {\n        throw new TypeError('ShallowWrapper::renderProp() can only be called on custom components');\n      }\n      if (typeof propName !== 'string') {\n        throw new TypeError('ShallowWrapper::renderProp(): `propName` must be a string');\n      }\n      const props = this.props();\n      if (!has(props, propName)) {\n        throw new Error(`ShallowWrapper::renderProp(): no prop called “${propName}“ found`);\n      }\n      const propValue = props[propName];\n      if (typeof propValue !== 'function') {\n        throw new TypeError(`ShallowWrapper::renderProp(): expected prop “${propName}“ to contain a function, but it holds “${typeof propValue}“`);\n      }\n\n      return (...args) => {\n        const element = propValue(...args);\n        const wrapped = adapter.wrap(element);\n        return this.wrap(wrapped, null, this[OPTIONS]);\n      };\n    });\n  }\n\n  /**\n   * Returns the key assigned to the current node.\n   *\n   * @returns {String}\n   */\n  key() {\n    return this.single('key', (n) => (n.key === undefined ? null : n.key));\n  }\n\n  /**\n   * Returns the type of the current node of this wrapper. If it's a composite component, this will\n   * be the component constructor. If it's a native DOM node, it will be a string of the tag name.\n   * If it's null, it will be null.\n   *\n   * @returns {String|Function|null}\n   */\n  type() {\n    return this.single('type', (n) => typeOfNode(n));\n  }\n\n  /**\n   * Returns the name of the current node of this wrapper.\n   *\n   * In order of precedence => type.displayName -> type.name -> type.\n   *\n   * @returns {String}\n   */\n  name() {\n    const adapter = getAdapter(this[OPTIONS]);\n    return this.single('name', (n) => (\n      adapter.displayNameOfNode ? adapter.displayNameOfNode(n) : displayNameOfNode(n)\n    ));\n  }\n\n  /**\n   * Returns whether or not the current node has the given class name or not.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param className\n   * @returns {Boolean}\n   */\n  hasClass(className) {\n    if (typeof className === 'string' && className.indexOf('.') !== -1) {\n      // eslint-disable-next-line no-console\n      console.warn('It looks like you\\'re calling `ShallowWrapper::hasClass()` with a CSS selector. hasClass() expects a class name, not a CSS selector.');\n    }\n    return this.single('hasClass', (n) => hasClassName(n, className));\n  }\n\n  /**\n   * Iterates through each node of the current wrapper and executes the provided function with a\n   * wrapper around the corresponding node passed in as the first argument.\n   *\n   * @param {Function} fn\n   * @returns {ShallowWrapper}\n   */\n  forEach(fn) {\n    this.getNodesInternal().forEach((n, i) => fn.call(this, this.wrap(n), i));\n    return this;\n  }\n\n  /**\n   * Maps the current array of nodes to another array. Each node is passed in as a `ShallowWrapper`\n   * to the map function.\n   *\n   * @param {Function} fn\n   * @returns {Array}\n   */\n  map(fn) {\n    return this.getNodesInternal().map((n, i) => fn.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Reduces the current array of nodes to a value. Each node is passed in as a `ShallowWrapper`\n   * to the reducer function.\n   *\n   * @param {Function} fn - the reducer function\n   * @param {*} initialValue - the initial value\n   * @returns {*}\n   */\n  reduce(fn, initialValue = undefined) {\n    if (arguments.length > 1) {\n      return this.getNodesInternal().reduce(\n        (accum, n, i) => fn.call(this, accum, this.wrap(n), i),\n        initialValue,\n      );\n    }\n    return this.getNodesInternal().reduce((accum, n, i) => fn.call(\n      this,\n      i === 1 ? this.wrap(accum) : accum,\n      this.wrap(n),\n      i,\n    ));\n  }\n\n  /**\n   * Reduces the current array of nodes to another array, from right to left. Each node is passed\n   * in as a `ShallowWrapper` to the reducer function.\n   *\n   * @param {Function} fn - the reducer function\n   * @param {*} initialValue - the initial value\n   * @returns {*}\n   */\n  reduceRight(fn, initialValue = undefined) {\n    if (arguments.length > 1) {\n      return this.getNodesInternal().reduceRight(\n        (accum, n, i) => fn.call(this, accum, this.wrap(n), i),\n        initialValue,\n      );\n    }\n    return this.getNodesInternal().reduceRight((accum, n, i) => fn.call(\n      this,\n      i === 1 ? this.wrap(accum) : accum,\n      this.wrap(n),\n      i,\n    ));\n  }\n\n  /**\n   * Returns a new wrapper with a subset of the nodes of the original wrapper, according to the\n   * rules of `Array#slice`.\n   *\n   * @param {Number} begin\n   * @param {Number} end\n   * @returns {ShallowWrapper}\n   */\n  slice(begin, end) {\n    return this.wrap(this.getNodesInternal().slice(begin, end));\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper match the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {Boolean}\n   */\n  some(selector) {\n    if (this[ROOT] === this) {\n      throw new Error('ShallowWrapper::some() can not be called on the root');\n    }\n    const predicate = buildPredicate(selector);\n    return this.getNodesInternal().some(predicate);\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n   *\n   * @param {Function} predicate\n   * @returns {Boolean}\n   */\n  someWhere(predicate) {\n    return this.getNodesInternal().some((n, i) => predicate.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Returns whether or not all of the nodes in the wrapper match the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {Boolean}\n   */\n  every(selector) {\n    const predicate = buildPredicate(selector);\n    return this.getNodesInternal().every(predicate);\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n   *\n   * @param {Function} predicate\n   * @returns {Boolean}\n   */\n  everyWhere(predicate) {\n    return this.getNodesInternal().every((n, i) => predicate.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Utility method used to create new wrappers with a mapping function that returns an array of\n   * nodes in response to a single node wrapper. The returned wrapper is a single wrapper around\n   * all of the mapped nodes flattened (and de-duplicated).\n   *\n   * @param {Function} fn\n   * @returns {ShallowWrapper}\n   */\n  flatMap(fn) {\n    const nodes = this.getNodesInternal().map((n, i) => fn.call(this, this.wrap(n), i));\n    const flattened = flat(nodes, 1);\n    return this.wrap(flattened.filter(Boolean));\n  }\n\n  /**\n   * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n   * function. The predicate function will receive the nodes inside a ShallowWrapper as its\n   * first argument.\n   *\n   * @param {Function} predicate\n   * @returns {ShallowWrapper}\n   */\n  findWhere(predicate) {\n    return findWhereUnwrapped(this, (n) => {\n      const node = this.wrap(n);\n      return node.length > 0 && predicate(node);\n    });\n  }\n\n  /**\n   * Returns the node at a given index of the current wrapper.\n   *\n   * @param index\n   * @returns {ReactElement}\n   */\n  get(index) {\n    return this.getElements()[index];\n  }\n\n  /**\n   * Returns a wrapper around the node at a given index of the current wrapper.\n   *\n   * @param index\n   * @returns {ShallowWrapper}\n   */\n  at(index) {\n    const nodes = this.getNodesInternal();\n    if (index < nodes.length) {\n      return this.wrap(nodes[index]);\n    }\n    return this.wrap([]);\n  }\n\n  /**\n   * Returns a wrapper around the first node of the current wrapper.\n   *\n   * @returns {ShallowWrapper}\n   */\n  first() {\n    return this.at(0);\n  }\n\n  /**\n   * Returns a wrapper around the last node of the current wrapper.\n   *\n   * @returns {ShallowWrapper}\n   */\n  last() {\n    return this.at(this.length - 1);\n  }\n\n  /**\n   * Delegates to exists()\n   *\n   * @returns {boolean}\n   */\n  isEmpty() {\n    // eslint-disable-next-line no-console\n    console.warn('Enzyme::Deprecated method isEmpty() called, use exists() instead.');\n    return !this.exists();\n  }\n\n  /**\n   * Returns true if the current wrapper has nodes. False otherwise.\n   * If called with a selector it returns `.find(selector).exists()` instead.\n   *\n   * @param {EnzymeSelector} selector (optional)\n   * @returns {boolean}\n   */\n  exists(selector = null) {\n    return arguments.length > 0 ? this.find(selector).exists() : this.length > 0;\n  }\n\n  /**\n   * Utility method that throws an error if the current instance has a length other than one.\n   * This is primarily used to enforce that certain methods are only run on a wrapper when it is\n   * wrapping a single node.\n   *\n   * @param fn\n   * @returns {*}\n   */\n  single(name, fn) {\n    const fnName = typeof name === 'string' ? name : 'unknown';\n    const callback = typeof fn === 'function' ? fn : name;\n    if (this.length !== 1) {\n      throw new Error(`Method “${fnName}” is meant to be run on 1 node. ${this.length} found instead.`);\n    }\n    return callback.call(this, this.getNodeInternal());\n  }\n\n  /**\n   * Helpful utility method to create a new wrapper with the same root as the current wrapper, with\n   * any nodes passed in as the first parameter automatically wrapped.\n   *\n   * @param node\n   * @returns {ShallowWrapper}\n   */\n  wrap(node, root = this[ROOT], ...args) {\n    if (node instanceof ShallowWrapper) {\n      return node;\n    }\n    return new ShallowWrapper(node, root, ...args);\n  }\n\n  /**\n   * Returns an HTML-like string of the shallow render for debugging purposes.\n   *\n   * @param {Object} [options] - Property bag of additional options.\n   * @param {boolean} [options.ignoreProps] - if true, props are omitted from the string.\n   * @param {boolean} [options.verbose] - if true, arrays and objects to be verbosely printed.\n   * @returns {String}\n   */\n  debug(options = {}) {\n    return debugNodes(this.getNodesInternal(), options);\n  }\n\n  /**\n   * Invokes intercepter and returns itself. intercepter is called with itself.\n   * This is helpful when debugging nodes in method chains.\n   * @param fn\n   * @returns {ShallowWrapper}\n   */\n  tap(intercepter) {\n    intercepter(this);\n    return this;\n  }\n\n  /**\n   * Primarily useful for HOCs (higher-order components), this method may only be\n   * run on a single, non-DOM node, and will return the node, shallow-rendered.\n   *\n   * @param {Object} options\n   * @returns {ShallowWrapper}\n   */\n  dive(options = {}) {\n    const adapter = getAdapter(this[OPTIONS]);\n    const name = 'dive';\n    return this.single(name, (n) => {\n      if (n && n.nodeType === 'host') {\n        throw new TypeError(`ShallowWrapper::${name}() can not be called on Host Components`);\n      }\n      const el = getAdapter(this[OPTIONS]).nodeToElement(n);\n      if (!isCustomComponentElement(el, adapter)) {\n        throw new TypeError(`ShallowWrapper::${name}() can only be called on components`);\n      }\n      const childOptions = makeInheritedChildOptions(this, options);\n      return this.wrap(el, null, childOptions);\n    });\n  }\n\n  /**\n   * Strips out all the not host-nodes from the list of nodes\n   *\n   * This method is useful if you want to check for the presence of host nodes\n   * (actually rendered HTML elements) ignoring the React nodes.\n   */\n  hostNodes() {\n    return this.filterWhere((n) => typeof n.type() === 'string');\n  }\n}\n\n/**\n * Updates the context of the primary wrapper when the\n * `wrappingComponent` re-renders.\n */\nfunction updatePrimaryRootContext(wrappingComponent) {\n  const adapter = getAdapter(wrappingComponent[OPTIONS]);\n  const primaryWrapper = wrappingComponent[PRIMARY_WRAPPER];\n  const primaryRenderer = primaryWrapper[RENDERER];\n  const primaryNode = primaryRenderer.getNode();\n  const {\n    legacyContext,\n    providerValues,\n  } = getContextFromWrappingComponent(wrappingComponent, adapter);\n  const prevProviderValues = primaryWrapper[PROVIDER_VALUES];\n\n  primaryWrapper.setContext({\n    ...wrappingComponent[PRIMARY_WRAPPER][OPTIONS].context,\n    ...legacyContext,\n  });\n  primaryWrapper[PROVIDER_VALUES] = new Map([...prevProviderValues, ...providerValues]);\n\n  if (typeof adapter.isContextConsumer === 'function' && adapter.isContextConsumer(primaryNode.type)) {\n    const Consumer = primaryNode.type;\n    // Adapters with an `isContextConsumer` method will definitely have a `getProviderFromConsumer`\n    // method.\n    const Provider = adapter.getProviderFromConsumer(Consumer);\n    const newValue = providerValues.get(Provider);\n    const oldValue = prevProviderValues.get(Provider);\n\n    // Use referential comparison like React\n    if (newValue !== oldValue) {\n      primaryWrapper.rerender();\n    }\n  }\n}\n\n/**\n * A *special* \"root\" wrapper that represents the component passed as `wrappingComponent`.\n * It is linked to the primary root such that updates to it will update the primary.\n *\n * @class WrappingComponentWrapper\n */\nclass WrappingComponentWrapper extends ShallowWrapper {\n  constructor(nodes, root, RootFinder) {\n    super(nodes);\n    privateSet(this, PRIMARY_WRAPPER, root);\n    privateSet(this, ROOT_FINDER, RootFinder);\n  }\n\n  /**\n   * Like rerender() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n  rerender(...args) {\n    const result = super.rerender(...args);\n    updatePrimaryRootContext(this);\n    return result;\n  }\n\n  /**\n   * Like setState() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n  setState(...args) {\n    const result = super.setState(...args);\n    updatePrimaryRootContext(this);\n    return result;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getWrappingComponent() {\n    throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n  }\n}\n\nif (ITERATOR_SYMBOL) {\n  Object.defineProperty(ShallowWrapper.prototype, ITERATOR_SYMBOL, {\n    configurable: true,\n    value: function iterator() {\n      const iter = this.getNodesInternal()[ITERATOR_SYMBOL]();\n      const adapter = getAdapter(this[OPTIONS]);\n      return {\n        [ITERATOR_SYMBOL]() { return this; },\n        next() {\n          const next = iter.next();\n          if (next.done) {\n            return { done: true };\n          }\n          return {\n            done: false,\n            value: adapter.nodeToElement(next.value),\n          };\n        },\n      };\n    },\n  });\n}\n\nfunction privateWarning(prop, extraMessage) {\n  Object.defineProperty(ShallowWrapper.prototype, prop, {\n    get() {\n      throw new Error(`\n        Attempted to access ShallowWrapper::${prop}, which was previously a private property on\n        Enzyme ShallowWrapper instances, but is no longer and should not be relied upon.\n        ${extraMessage}\n      `);\n    },\n    enumerable: false,\n    configurable: false,\n  });\n}\n\nprivateWarning('node', 'Consider using the getElement() method instead.');\nprivateWarning('nodes', 'Consider using the getElements() method instead.');\nprivateWarning('renderer', '');\nprivateWarning('options', '');\nprivateWarning('complexSelector', '');\n\nexport default ShallowWrapper;\n"]},"metadata":{},"sourceType":"script"}