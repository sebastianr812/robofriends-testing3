{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%', true);\nvar $isExtensible = GetIntrinsic('%Object.isExtensible%', true);\n\nvar isPrimitive = require('../helpers/isPrimitive'); // https://ecma-international.org/ecma-262/6.0/#sec-isextensible-o\n\n\nmodule.exports = $preventExtensions ? function IsExtensible(obj) {\n  return !isPrimitive(obj) && $isExtensible(obj);\n} : function IsExtensible(obj) {\n  return !isPrimitive(obj);\n};","map":{"version":3,"names":["GetIntrinsic","require","$preventExtensions","$isExtensible","isPrimitive","module","exports","IsExtensible","obj"],"sources":["/Users/sebas/Desktop/robofriends-testing/node_modules/es-abstract/2021/IsExtensible.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%', true);\nvar $isExtensible = GetIntrinsic('%Object.isExtensible%', true);\n\nvar isPrimitive = require('../helpers/isPrimitive');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-isextensible-o\n\nmodule.exports = $preventExtensions\n\t? function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj) && $isExtensible(obj);\n\t}\n\t: function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj);\n\t};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,kBAAkB,GAAGF,YAAY,CAAC,4BAAD,EAA+B,IAA/B,CAArC;AACA,IAAIG,aAAa,GAAGH,YAAY,CAAC,uBAAD,EAA0B,IAA1B,CAAhC;;AAEA,IAAII,WAAW,GAAGH,OAAO,CAAC,wBAAD,CAAzB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBJ,kBAAkB,GAChC,SAASK,YAAT,CAAsBC,GAAtB,EAA2B;EAC5B,OAAO,CAACJ,WAAW,CAACI,GAAD,CAAZ,IAAqBL,aAAa,CAACK,GAAD,CAAzC;AACA,CAHiC,GAIhC,SAASD,YAAT,CAAsBC,GAAtB,EAA2B;EAC5B,OAAO,CAACJ,WAAW,CAACI,GAAD,CAAnB;AACA,CANF"},"metadata":{},"sourceType":"script"}