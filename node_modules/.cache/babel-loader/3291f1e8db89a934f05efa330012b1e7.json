{"ast":null,"code":"import { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchRobots = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateSearch;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n};\nexport const requestRobots = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRobots;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","action","type","Object","assign","payload","initialStateRobots","robots","isPending","requestRobots","error"],"sources":["/Users/sebas/Desktop/robofriends-testing/src/reducers.js"],"sourcesContent":["import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}"],"mappings":"AAAA,SACEA,kBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKQ,aALR;AAOA,MAAMC,kBAAkB,GAAG;EACzBC,WAAW,EAAE;AADY,CAA3B;AAIA,OAAO,MAAMC,YAAY,GAAG,YAAyC;EAAA,IAAxCC,KAAwC,uEAAlCH,kBAAkC;EAAA,IAAdI,MAAc,uEAAP,EAAO;;EACnE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKT,kBAAL;MACE,OAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;QAACF,WAAW,EAAEG,MAAM,CAACI;MAArB,CAAzB,CAAP;;IACF;MACE,OAAOL,KAAP;EAJJ;AAMD,CAPM;AASP,MAAMM,kBAAkB,GAAG;EACzBC,MAAM,EAAE,EADiB;EAEzBC,SAAS,EAAE;AAFc,CAA3B;AAKA,OAAO,MAAMC,aAAa,GAAG,YAAyC;EAAA,IAAxCT,KAAwC,uEAAlCM,kBAAkC;EAAA,IAAdL,MAAc,uEAAP,EAAO;;EACpE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,sBAAL;MACE,OAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;QAACQ,SAAS,EAAE;MAAZ,CAAzB,CAAP;;IACF,KAAKb,sBAAL;MACE,OAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;QAACO,MAAM,EAAEN,MAAM,CAACI,OAAhB;QAAyBG,SAAS,EAAE;MAApC,CAAzB,CAAP;;IACF,KAAKZ,qBAAL;MACE,OAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;QAACU,KAAK,EAAET,MAAM,CAACI;MAAf,CAAzB,CAAP;;IACF;MACE,OAAOL,KAAP;EARJ;AAUD,CAXM"},"metadata":{},"sourceType":"module"}