{"ast":null,"code":"'use strict';\n\nconst doctype = require('parse5/lib/common/doctype');\n\nconst {\n  DOCUMENT_MODE\n} = require('parse5/lib/common/html'); //Conversion tables for DOM Level1 structure emulation\n\n\nconst nodeTypes = {\n  element: 1,\n  text: 3,\n  cdata: 4,\n  comment: 8\n};\nconst nodePropertyShorthands = {\n  tagName: 'name',\n  childNodes: 'children',\n  parentNode: 'parent',\n  previousSibling: 'prev',\n  nextSibling: 'next',\n  nodeValue: 'data'\n}; //Node\n\nclass Node {\n  constructor(props) {\n    for (const key of Object.keys(props)) {\n      this[key] = props[key];\n    }\n  }\n\n  get firstChild() {\n    const children = this.children;\n    return children && children[0] || null;\n  }\n\n  get lastChild() {\n    const children = this.children;\n    return children && children[children.length - 1] || null;\n  }\n\n  get nodeType() {\n    return nodeTypes[this.type] || nodeTypes.element;\n  }\n\n}\n\nObject.keys(nodePropertyShorthands).forEach(key => {\n  const shorthand = nodePropertyShorthands[key];\n  Object.defineProperty(Node.prototype, key, {\n    get: function () {\n      return this[shorthand] || null;\n    },\n    set: function (val) {\n      this[shorthand] = val;\n      return val;\n    }\n  });\n}); //Node construction\n\nexports.createDocument = function () {\n  return new Node({\n    type: 'root',\n    name: 'root',\n    parent: null,\n    prev: null,\n    next: null,\n    children: [],\n    'x-mode': DOCUMENT_MODE.NO_QUIRKS\n  });\n};\n\nexports.createDocumentFragment = function () {\n  return new Node({\n    type: 'root',\n    name: 'root',\n    parent: null,\n    prev: null,\n    next: null,\n    children: []\n  });\n};\n\nexports.createElement = function (tagName, namespaceURI, attrs) {\n  const attribs = Object.create(null);\n  const attribsNamespace = Object.create(null);\n  const attribsPrefix = Object.create(null);\n\n  for (let i = 0; i < attrs.length; i++) {\n    const attrName = attrs[i].name;\n    attribs[attrName] = attrs[i].value;\n    attribsNamespace[attrName] = attrs[i].namespace;\n    attribsPrefix[attrName] = attrs[i].prefix;\n  }\n\n  return new Node({\n    type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\n    name: tagName,\n    namespace: namespaceURI,\n    attribs: attribs,\n    'x-attribsNamespace': attribsNamespace,\n    'x-attribsPrefix': attribsPrefix,\n    children: [],\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\n\nexports.createCommentNode = function (data) {\n  return new Node({\n    type: 'comment',\n    data: data,\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\n\nconst createTextNode = function (value) {\n  return new Node({\n    type: 'text',\n    data: value,\n    parent: null,\n    prev: null,\n    next: null\n  });\n}; //Tree mutation\n\n\nconst appendChild = exports.appendChild = function (parentNode, newNode) {\n  const prev = parentNode.children[parentNode.children.length - 1];\n\n  if (prev) {\n    prev.next = newNode;\n    newNode.prev = prev;\n  }\n\n  parentNode.children.push(newNode);\n  newNode.parent = parentNode;\n};\n\nconst insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n  const insertionIdx = parentNode.children.indexOf(referenceNode);\n  const prev = referenceNode.prev;\n\n  if (prev) {\n    prev.next = newNode;\n    newNode.prev = prev;\n  }\n\n  referenceNode.prev = newNode;\n  newNode.next = referenceNode;\n  parentNode.children.splice(insertionIdx, 0, newNode);\n  newNode.parent = parentNode;\n};\n\nexports.setTemplateContent = function (templateElement, contentElement) {\n  appendChild(templateElement, contentElement);\n};\n\nexports.getTemplateContent = function (templateElement) {\n  return templateElement.children[0];\n};\n\nexports.setDocumentType = function (document, name, publicId, systemId) {\n  const data = doctype.serializeContent(name, publicId, systemId);\n  let doctypeNode = null;\n\n  for (let i = 0; i < document.children.length; i++) {\n    if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\n      doctypeNode = document.children[i];\n      break;\n    }\n  }\n\n  if (doctypeNode) {\n    doctypeNode.data = data;\n    doctypeNode['x-name'] = name;\n    doctypeNode['x-publicId'] = publicId;\n    doctypeNode['x-systemId'] = systemId;\n  } else {\n    appendChild(document, new Node({\n      type: 'directive',\n      name: '!doctype',\n      data: data,\n      'x-name': name,\n      'x-publicId': publicId,\n      'x-systemId': systemId\n    }));\n  }\n};\n\nexports.setDocumentMode = function (document, mode) {\n  document['x-mode'] = mode;\n};\n\nexports.getDocumentMode = function (document) {\n  return document['x-mode'];\n};\n\nexports.detachNode = function (node) {\n  if (node.parent) {\n    const idx = node.parent.children.indexOf(node);\n    const prev = node.prev;\n    const next = node.next;\n    node.prev = null;\n    node.next = null;\n\n    if (prev) {\n      prev.next = next;\n    }\n\n    if (next) {\n      next.prev = prev;\n    }\n\n    node.parent.children.splice(idx, 1);\n    node.parent = null;\n  }\n};\n\nexports.insertText = function (parentNode, text) {\n  const lastChild = parentNode.children[parentNode.children.length - 1];\n\n  if (lastChild && lastChild.type === 'text') {\n    lastChild.data += text;\n  } else {\n    appendChild(parentNode, createTextNode(text));\n  }\n};\n\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n  const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n\n  if (prevNode && prevNode.type === 'text') {\n    prevNode.data += text;\n  } else {\n    insertBefore(parentNode, createTextNode(text), referenceNode);\n  }\n};\n\nexports.adoptAttributes = function (recipient, attrs) {\n  for (let i = 0; i < attrs.length; i++) {\n    const attrName = attrs[i].name;\n\n    if (typeof recipient.attribs[attrName] === 'undefined') {\n      recipient.attribs[attrName] = attrs[i].value;\n      recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n      recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n    }\n  }\n}; //Tree traversing\n\n\nexports.getFirstChild = function (node) {\n  return node.children[0];\n};\n\nexports.getChildNodes = function (node) {\n  return node.children;\n};\n\nexports.getParentNode = function (node) {\n  return node.parent;\n};\n\nexports.getAttrList = function (element) {\n  const attrList = [];\n\n  for (const name in element.attribs) {\n    attrList.push({\n      name: name,\n      value: element.attribs[name],\n      namespace: element['x-attribsNamespace'][name],\n      prefix: element['x-attribsPrefix'][name]\n    });\n  }\n\n  return attrList;\n}; //Node data\n\n\nexports.getTagName = function (element) {\n  return element.name;\n};\n\nexports.getNamespaceURI = function (element) {\n  return element.namespace;\n};\n\nexports.getTextNodeContent = function (textNode) {\n  return textNode.data;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode['x-name'];\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode['x-publicId'];\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode['x-systemId'];\n}; //Node types\n\n\nexports.isTextNode = function (node) {\n  return node.type === 'text';\n};\n\nexports.isCommentNode = function (node) {\n  return node.type === 'comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n  return node.type === 'directive' && node.name === '!doctype';\n};\n\nexports.isElementNode = function (node) {\n  return !!node.attribs;\n}; // Source code location\n\n\nexports.setNodeSourceCodeLocation = function (node, location) {\n  node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function (node) {\n  return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function (node, endLocation) {\n  node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"names":["doctype","require","DOCUMENT_MODE","nodeTypes","element","text","cdata","comment","nodePropertyShorthands","tagName","childNodes","parentNode","previousSibling","nextSibling","nodeValue","Node","constructor","props","key","Object","keys","firstChild","children","lastChild","length","nodeType","type","forEach","shorthand","defineProperty","prototype","get","set","val","exports","createDocument","name","parent","prev","next","NO_QUIRKS","createDocumentFragment","createElement","namespaceURI","attrs","attribs","create","attribsNamespace","attribsPrefix","i","attrName","value","namespace","prefix","createCommentNode","data","createTextNode","appendChild","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","getTemplateContent","setDocumentType","document","publicId","systemId","serializeContent","doctypeNode","setDocumentMode","mode","getDocumentMode","detachNode","node","idx","insertText","insertTextBefore","prevNode","adoptAttributes","recipient","getFirstChild","getChildNodes","getParentNode","getAttrList","attrList","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","assign"],"sources":["/Users/sebas/Desktop/robofriends-testing/node_modules/parse5-htmlparser2-tree-adapter/lib/index.js"],"sourcesContent":["'use strict';\n\nconst doctype = require('parse5/lib/common/doctype');\nconst { DOCUMENT_MODE } = require('parse5/lib/common/html');\n\n//Conversion tables for DOM Level1 structure emulation\nconst nodeTypes = {\n    element: 1,\n    text: 3,\n    cdata: 4,\n    comment: 8\n};\n\nconst nodePropertyShorthands = {\n    tagName: 'name',\n    childNodes: 'children',\n    parentNode: 'parent',\n    previousSibling: 'prev',\n    nextSibling: 'next',\n    nodeValue: 'data'\n};\n\n//Node\nclass Node {\n    constructor(props) {\n        for (const key of Object.keys(props)) {\n            this[key] = props[key];\n        }\n    }\n\n    get firstChild() {\n        const children = this.children;\n\n        return (children && children[0]) || null;\n    }\n\n    get lastChild() {\n        const children = this.children;\n\n        return (children && children[children.length - 1]) || null;\n    }\n\n    get nodeType() {\n        return nodeTypes[this.type] || nodeTypes.element;\n    }\n}\n\nObject.keys(nodePropertyShorthands).forEach(key => {\n    const shorthand = nodePropertyShorthands[key];\n\n    Object.defineProperty(Node.prototype, key, {\n        get: function() {\n            return this[shorthand] || null;\n        },\n        set: function(val) {\n            this[shorthand] = val;\n            return val;\n        }\n    });\n});\n\n//Node construction\nexports.createDocument = function() {\n    return new Node({\n        type: 'root',\n        name: 'root',\n        parent: null,\n        prev: null,\n        next: null,\n        children: [],\n        'x-mode': DOCUMENT_MODE.NO_QUIRKS\n    });\n};\n\nexports.createDocumentFragment = function() {\n    return new Node({\n        type: 'root',\n        name: 'root',\n        parent: null,\n        prev: null,\n        next: null,\n        children: []\n    });\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    const attribs = Object.create(null);\n    const attribsNamespace = Object.create(null);\n    const attribsPrefix = Object.create(null);\n\n    for (let i = 0; i < attrs.length; i++) {\n        const attrName = attrs[i].name;\n\n        attribs[attrName] = attrs[i].value;\n        attribsNamespace[attrName] = attrs[i].namespace;\n        attribsPrefix[attrName] = attrs[i].prefix;\n    }\n\n    return new Node({\n        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\n        name: tagName,\n        namespace: namespaceURI,\n        attribs: attribs,\n        'x-attribsNamespace': attribsNamespace,\n        'x-attribsPrefix': attribsPrefix,\n        children: [],\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\nexports.createCommentNode = function(data) {\n    return new Node({\n        type: 'comment',\n        data: data,\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\nconst createTextNode = function(value) {\n    return new Node({\n        type: 'text',\n        data: value,\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    const prev = parentNode.children[parentNode.children.length - 1];\n\n    if (prev) {\n        prev.next = newNode;\n        newNode.prev = prev;\n    }\n\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.children.indexOf(referenceNode);\n    const prev = referenceNode.prev;\n\n    if (prev) {\n        prev.next = newNode;\n        newNode.prev = prev;\n    }\n\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    appendChild(templateElement, contentElement);\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.children[0];\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    const data = doctype.serializeContent(name, publicId, systemId);\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.children.length; i++) {\n        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\n            doctypeNode = document.children[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.data = data;\n        doctypeNode['x-name'] = name;\n        doctypeNode['x-publicId'] = publicId;\n        doctypeNode['x-systemId'] = systemId;\n    } else {\n        appendChild(\n            document,\n            new Node({\n                type: 'directive',\n                name: '!doctype',\n                data: data,\n                'x-name': name,\n                'x-publicId': publicId,\n                'x-systemId': systemId\n            })\n        );\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document['x-mode'] = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document['x-mode'];\n};\n\nexports.detachNode = function(node) {\n    if (node.parent) {\n        const idx = node.parent.children.indexOf(node);\n        const prev = node.prev;\n        const next = node.next;\n\n        node.prev = null;\n        node.next = null;\n\n        if (prev) {\n            prev.next = next;\n        }\n\n        if (next) {\n            next.prev = prev;\n        }\n\n        node.parent.children.splice(idx, 1);\n        node.parent = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    const lastChild = parentNode.children[parentNode.children.length - 1];\n\n    if (lastChild && lastChild.type === 'text') {\n        lastChild.data += text;\n    } else {\n        appendChild(parentNode, createTextNode(text));\n    }\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.type === 'text') {\n        prevNode.data += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    for (let i = 0; i < attrs.length; i++) {\n        const attrName = attrs[i].name;\n\n        if (typeof recipient.attribs[attrName] === 'undefined') {\n            recipient.attribs[attrName] = attrs[i].value;\n            recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n            recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.children[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.children;\n};\n\nexports.getParentNode = function(node) {\n    return node.parent;\n};\n\nexports.getAttrList = function(element) {\n    const attrList = [];\n\n    for (const name in element.attribs) {\n        attrList.push({\n            name: name,\n            value: element.attribs[name],\n            namespace: element['x-attribsNamespace'][name],\n            prefix: element['x-attribsPrefix'][name]\n        });\n    }\n\n    return attrList;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.name;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespace;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.data;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode['x-name'];\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode['x-publicId'];\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode['x-systemId'];\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.type === 'text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.type === 'comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.type === 'directive' && node.name === '!doctype';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.attribs;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}